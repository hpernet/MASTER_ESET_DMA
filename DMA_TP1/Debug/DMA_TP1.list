
DMA_TP1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000236c  080001c8  080001c8  000101c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001d8  08002538  08002538  00012538  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002710  08002710  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08002710  08002710  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002710  08002710  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002710  08002710  00012710  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002714  08002714  00012714  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08002718  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00007d20  20000004  0800271c  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20007d24  0800271c  00027d24  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003faf  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000de8  00000000  00000000  00023fe3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000003d0  00000000  00000000  00024dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000338  00000000  00000000  000251a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00020f2e  00000000  00000000  000254d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004d28  00000000  00000000  00046406  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000c787d  00000000  00000000  0004b12e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  001129ab  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000010b8  00000000  00000000  001129fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000004 	.word	0x20000004
 80001e4:	00000000 	.word	0x00000000
 80001e8:	0800251c 	.word	0x0800251c

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000008 	.word	0x20000008
 8000204:	0800251c 	.word	0x0800251c

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	; 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>

080009a4 <__gedf2>:
 80009a4:	f04f 3cff 	mov.w	ip, #4294967295
 80009a8:	e006      	b.n	80009b8 <__cmpdf2+0x4>
 80009aa:	bf00      	nop

080009ac <__ledf2>:
 80009ac:	f04f 0c01 	mov.w	ip, #1
 80009b0:	e002      	b.n	80009b8 <__cmpdf2+0x4>
 80009b2:	bf00      	nop

080009b4 <__cmpdf2>:
 80009b4:	f04f 0c01 	mov.w	ip, #1
 80009b8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009c8:	bf18      	it	ne
 80009ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ce:	d01b      	beq.n	8000a08 <__cmpdf2+0x54>
 80009d0:	b001      	add	sp, #4
 80009d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009d6:	bf0c      	ite	eq
 80009d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009dc:	ea91 0f03 	teqne	r1, r3
 80009e0:	bf02      	ittt	eq
 80009e2:	ea90 0f02 	teqeq	r0, r2
 80009e6:	2000      	moveq	r0, #0
 80009e8:	4770      	bxeq	lr
 80009ea:	f110 0f00 	cmn.w	r0, #0
 80009ee:	ea91 0f03 	teq	r1, r3
 80009f2:	bf58      	it	pl
 80009f4:	4299      	cmppl	r1, r3
 80009f6:	bf08      	it	eq
 80009f8:	4290      	cmpeq	r0, r2
 80009fa:	bf2c      	ite	cs
 80009fc:	17d8      	asrcs	r0, r3, #31
 80009fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a02:	f040 0001 	orr.w	r0, r0, #1
 8000a06:	4770      	bx	lr
 8000a08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a10:	d102      	bne.n	8000a18 <__cmpdf2+0x64>
 8000a12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a16:	d107      	bne.n	8000a28 <__cmpdf2+0x74>
 8000a18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a20:	d1d6      	bne.n	80009d0 <__cmpdf2+0x1c>
 8000a22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a26:	d0d3      	beq.n	80009d0 <__cmpdf2+0x1c>
 8000a28:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a2c:	4770      	bx	lr
 8000a2e:	bf00      	nop

08000a30 <__aeabi_cdrcmple>:
 8000a30:	4684      	mov	ip, r0
 8000a32:	4610      	mov	r0, r2
 8000a34:	4662      	mov	r2, ip
 8000a36:	468c      	mov	ip, r1
 8000a38:	4619      	mov	r1, r3
 8000a3a:	4663      	mov	r3, ip
 8000a3c:	e000      	b.n	8000a40 <__aeabi_cdcmpeq>
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cdcmpeq>:
 8000a40:	b501      	push	{r0, lr}
 8000a42:	f7ff ffb7 	bl	80009b4 <__cmpdf2>
 8000a46:	2800      	cmp	r0, #0
 8000a48:	bf48      	it	mi
 8000a4a:	f110 0f00 	cmnmi.w	r0, #0
 8000a4e:	bd01      	pop	{r0, pc}

08000a50 <__aeabi_dcmpeq>:
 8000a50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a54:	f7ff fff4 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a58:	bf0c      	ite	eq
 8000a5a:	2001      	moveq	r0, #1
 8000a5c:	2000      	movne	r0, #0
 8000a5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a62:	bf00      	nop

08000a64 <__aeabi_dcmplt>:
 8000a64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a68:	f7ff ffea 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a6c:	bf34      	ite	cc
 8000a6e:	2001      	movcc	r0, #1
 8000a70:	2000      	movcs	r0, #0
 8000a72:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a76:	bf00      	nop

08000a78 <__aeabi_dcmple>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff ffe0 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a80:	bf94      	ite	ls
 8000a82:	2001      	movls	r0, #1
 8000a84:	2000      	movhi	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmpge>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffce 	bl	8000a30 <__aeabi_cdrcmple>
 8000a94:	bf94      	ite	ls
 8000a96:	2001      	movls	r0, #1
 8000a98:	2000      	movhi	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmpgt>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffc4 	bl	8000a30 <__aeabi_cdrcmple>
 8000aa8:	bf34      	ite	cc
 8000aaa:	2001      	movcc	r0, #1
 8000aac:	2000      	movcs	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_d2iz>:
 8000ab4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000abc:	d215      	bcs.n	8000aea <__aeabi_d2iz+0x36>
 8000abe:	d511      	bpl.n	8000ae4 <__aeabi_d2iz+0x30>
 8000ac0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac8:	d912      	bls.n	8000af0 <__aeabi_d2iz+0x3c>
 8000aca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ace:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ad2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ada:	fa23 f002 	lsr.w	r0, r3, r2
 8000ade:	bf18      	it	ne
 8000ae0:	4240      	negne	r0, r0
 8000ae2:	4770      	bx	lr
 8000ae4:	f04f 0000 	mov.w	r0, #0
 8000ae8:	4770      	bx	lr
 8000aea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aee:	d105      	bne.n	8000afc <__aeabi_d2iz+0x48>
 8000af0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000af4:	bf08      	it	eq
 8000af6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000afa:	4770      	bx	lr
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	bf00      	nop

08000b04 <__aeabi_d2uiz>:
 8000b04:	004a      	lsls	r2, r1, #1
 8000b06:	d211      	bcs.n	8000b2c <__aeabi_d2uiz+0x28>
 8000b08:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b0c:	d211      	bcs.n	8000b32 <__aeabi_d2uiz+0x2e>
 8000b0e:	d50d      	bpl.n	8000b2c <__aeabi_d2uiz+0x28>
 8000b10:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b14:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b18:	d40e      	bmi.n	8000b38 <__aeabi_d2uiz+0x34>
 8000b1a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b1e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b22:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b26:	fa23 f002 	lsr.w	r0, r3, r2
 8000b2a:	4770      	bx	lr
 8000b2c:	f04f 0000 	mov.w	r0, #0
 8000b30:	4770      	bx	lr
 8000b32:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b36:	d102      	bne.n	8000b3e <__aeabi_d2uiz+0x3a>
 8000b38:	f04f 30ff 	mov.w	r0, #4294967295
 8000b3c:	4770      	bx	lr
 8000b3e:	f04f 0000 	mov.w	r0, #0
 8000b42:	4770      	bx	lr

08000b44 <DMA_bis_Init>:
	HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);         // Activate DMA interrupt line in NVIC
	HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 1, 1);
}

void DMA_bis_Init(void)
{
 8000b44:	b580      	push	{r7, lr}
 8000b46:	af00      	add	r7, sp, #0
	RCC->AHB1ENR = RCC_AHB1ENR_DMA1EN;             // Activate the clock
 8000b48:	4b29      	ldr	r3, [pc, #164]	; (8000bf0 <DMA_bis_Init+0xac>)
 8000b4a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8000b4e:	631a      	str	r2, [r3, #48]	; 0x30
    DMA1_Stream5->CR  &= ~(DMA_SxCR_EN);           // deactivate DMA stream for configuration
 8000b50:	4b28      	ldr	r3, [pc, #160]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	4a27      	ldr	r2, [pc, #156]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b56:	f023 0301 	bic.w	r3, r3, #1
 8000b5a:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  &= ~(DMA_SxCR_CHSEL);        // clear bits
 8000b5c:	4b25      	ldr	r3, [pc, #148]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b5e:	681b      	ldr	r3, [r3, #0]
 8000b60:	4a24      	ldr	r2, [pc, #144]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b62:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 8000b66:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  |=  (DMA_CHANNEL_7);         // channel 7
 8000b68:	4b22      	ldr	r3, [pc, #136]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b6a:	681b      	ldr	r3, [r3, #0]
 8000b6c:	4a21      	ldr	r2, [pc, #132]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b6e:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 8000b72:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  &= ~(DMA_SxCR_PL);           // priority 00 = low
 8000b74:	4b1f      	ldr	r3, [pc, #124]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b76:	681b      	ldr	r3, [r3, #0]
 8000b78:	4a1e      	ldr	r2, [pc, #120]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b7a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000b7e:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  &= ~(DMA_SxCR_PSIZE);        // size 00 = 8bit
 8000b80:	4b1c      	ldr	r3, [pc, #112]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	4a1b      	ldr	r2, [pc, #108]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b86:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8000b8a:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  |=  (DMA_SxCR_MINC);         // increment memory pointer with each DMA transfer
 8000b8c:	4b19      	ldr	r3, [pc, #100]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	4a18      	ldr	r2, [pc, #96]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b92:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000b96:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  &= ~(DMA_SxCR_DIR);          // clear bits
 8000b98:	4b16      	ldr	r3, [pc, #88]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	4a15      	ldr	r2, [pc, #84]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000b9e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000ba2:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  |=   DMA_SxCR_CIRC;
 8000ba4:	4b13      	ldr	r3, [pc, #76]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000ba6:	681b      	ldr	r3, [r3, #0]
 8000ba8:	4a12      	ldr	r2, [pc, #72]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000baa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000bae:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  |=  (DMA_SxCR_DIR_0);        // 01 = memory-to-peripheral
 8000bb0:	4b10      	ldr	r3, [pc, #64]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bb2:	681b      	ldr	r3, [r3, #0]
 8000bb4:	4a0f      	ldr	r2, [pc, #60]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bb6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000bba:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->CR  |=  (DMA_SxCR_TCIE);         // Enable interrupt when a full transfer is complete
 8000bbc:	4b0d      	ldr	r3, [pc, #52]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	4a0c      	ldr	r2, [pc, #48]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bc2:	f043 0310 	orr.w	r3, r3, #16
 8000bc6:	6013      	str	r3, [r2, #0]
    DMA1_Stream5->PAR  =  &DAC1->DHR12R1;             // peripheral memory address
 8000bc8:	4b0a      	ldr	r3, [pc, #40]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bca:	4a0b      	ldr	r2, [pc, #44]	; (8000bf8 <DMA_bis_Init+0xb4>)
 8000bcc:	609a      	str	r2, [r3, #8]
    DMA1_Stream5->M0AR =  sinusTable;              // data memory address
 8000bce:	4b09      	ldr	r3, [pc, #36]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bd0:	4a0a      	ldr	r2, [pc, #40]	; (8000bfc <DMA_bis_Init+0xb8>)
 8000bd2:	60da      	str	r2, [r3, #12]
    DMA1_Stream5->NDTR = ( uint16_t ) BUFFER_SIZE_SINUS; // number of bytes to transfer
 8000bd4:	4b07      	ldr	r3, [pc, #28]	; (8000bf4 <DMA_bis_Init+0xb0>)
 8000bd6:	f44f 527a 	mov.w	r2, #16000	; 0x3e80
 8000bda:	605a      	str	r2, [r3, #4]
	HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);         // Activate DMA interrupt line in NVIC
 8000bdc:	2010      	movs	r0, #16
 8000bde:	f000 fa8a 	bl	80010f6 <HAL_NVIC_EnableIRQ>
	HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 1, 1);
 8000be2:	2201      	movs	r2, #1
 8000be4:	2101      	movs	r1, #1
 8000be6:	2010      	movs	r0, #16
 8000be8:	f000 fa69 	bl	80010be <HAL_NVIC_SetPriority>
}
 8000bec:	bf00      	nop
 8000bee:	bd80      	pop	{r7, pc}
 8000bf0:	40023800 	.word	0x40023800
 8000bf4:	40026088 	.word	0x40026088
 8000bf8:	40007408 	.word	0x40007408
 8000bfc:	20000020 	.word	0x20000020

08000c00 <GPIO_Init>:
#include <stm32f446xx.h>
#include "main.h"
#include "gpio.h"

void GPIO_Init(void)
{
 8000c00:	b580      	push	{r7, lr}
 8000c02:	b086      	sub	sp, #24
 8000c04:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c06:	1d3b      	adds	r3, r7, #4
 8000c08:	2200      	movs	r2, #0
 8000c0a:	601a      	str	r2, [r3, #0]
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	609a      	str	r2, [r3, #8]
 8000c10:	60da      	str	r2, [r3, #12]
 8000c12:	611a      	str	r2, [r3, #16]

	/* Clock Init */
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOCEN;
 8000c14:	4b19      	ldr	r3, [pc, #100]	; (8000c7c <GPIO_Init+0x7c>)
 8000c16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c18:	4a18      	ldr	r2, [pc, #96]	; (8000c7c <GPIO_Init+0x7c>)
 8000c1a:	f043 0305 	orr.w	r3, r3, #5
 8000c1e:	6313      	str	r3, [r2, #48]	; 0x30

	/* GPIO Init */
	GPIOA->MODER |= OUTPUT_MODE <<10;		// PA5 Output LED
 8000c20:	4b17      	ldr	r3, [pc, #92]	; (8000c80 <GPIO_Init+0x80>)
 8000c22:	681b      	ldr	r3, [r3, #0]
 8000c24:	4a16      	ldr	r2, [pc, #88]	; (8000c80 <GPIO_Init+0x80>)
 8000c26:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000c2a:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= INPUT_MODE	<< 26;		// PC13 Input Push-Button
 8000c2c:	4b15      	ldr	r3, [pc, #84]	; (8000c84 <GPIO_Init+0x84>)
 8000c2e:	4a15      	ldr	r2, [pc, #84]	; (8000c84 <GPIO_Init+0x84>)
 8000c30:	681b      	ldr	r3, [r3, #0]
 8000c32:	6013      	str	r3, [r2, #0]

	/*Configure GPIO pin : PC13 */
	GPIO_InitStruct.Pin  = GPIO_PIN_13;
 8000c34:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000c38:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c3a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8000c3e:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c40:	2300      	movs	r3, #0
 8000c42:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c44:	1d3b      	adds	r3, r7, #4
 8000c46:	4619      	mov	r1, r3
 8000c48:	480e      	ldr	r0, [pc, #56]	; (8000c84 <GPIO_Init+0x84>)
 8000c4a:	f000 fa63 	bl	8001114 <HAL_GPIO_Init>

    /**DAC GPIO Configuration
    PA4     ------> DAC_OUT1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000c4e:	2310      	movs	r3, #16
 8000c50:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000c52:	2303      	movs	r3, #3
 8000c54:	60bb      	str	r3, [r7, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c56:	2300      	movs	r3, #0
 8000c58:	60fb      	str	r3, [r7, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c5a:	1d3b      	adds	r3, r7, #4
 8000c5c:	4619      	mov	r1, r3
 8000c5e:	4808      	ldr	r0, [pc, #32]	; (8000c80 <GPIO_Init+0x80>)
 8000c60:	f000 fa58 	bl	8001114 <HAL_GPIO_Init>

	HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000c64:	2200      	movs	r2, #0
 8000c66:	2100      	movs	r1, #0
 8000c68:	2028      	movs	r0, #40	; 0x28
 8000c6a:	f000 fa28 	bl	80010be <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000c6e:	2028      	movs	r0, #40	; 0x28
 8000c70:	f000 fa41 	bl	80010f6 <HAL_NVIC_EnableIRQ>
}
 8000c74:	bf00      	nop
 8000c76:	3718      	adds	r7, #24
 8000c78:	46bd      	mov	sp, r7
 8000c7a:	bd80      	pop	{r7, pc}
 8000c7c:	40023800 	.word	0x40023800
 8000c80:	40020000 	.word	0x40020000
 8000c84:	40020800 	.word	0x40020800

08000c88 <init_sinus_table>:
	while(((USART2->SR)&= (1<<7))==0);
	USART2->DR = ch;
}

void init_sinus_table(void)
{
 8000c88:	b580      	push	{r7, lr}
 8000c8a:	b082      	sub	sp, #8
 8000c8c:	af00      	add	r7, sp, #0
    for  (uint32_t i = 0; i < BUFFER_SIZE_SINUS; i++)
 8000c8e:	2300      	movs	r3, #0
 8000c90:	607b      	str	r3, [r7, #4]
 8000c92:	e039      	b.n	8000d08 <init_sinus_table+0x80>
    {
        sinusTable[i] = OFFSET + (AMPLITUDE * sin((2 * PI * i) / AUDIOFREQ_16K));
 8000c94:	6878      	ldr	r0, [r7, #4]
 8000c96:	f7ff fbf9 	bl	800048c <__aeabi_ui2d>
 8000c9a:	a325      	add	r3, pc, #148	; (adr r3, 8000d30 <init_sinus_table+0xa8>)
 8000c9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000ca0:	f7ff fc6e 	bl	8000580 <__aeabi_dmul>
 8000ca4:	4602      	mov	r2, r0
 8000ca6:	460b      	mov	r3, r1
 8000ca8:	4610      	mov	r0, r2
 8000caa:	4619      	mov	r1, r3
 8000cac:	f04f 0200 	mov.w	r2, #0
 8000cb0:	4b1d      	ldr	r3, [pc, #116]	; (8000d28 <init_sinus_table+0xa0>)
 8000cb2:	f7ff fd8f 	bl	80007d4 <__aeabi_ddiv>
 8000cb6:	4602      	mov	r2, r0
 8000cb8:	460b      	mov	r3, r1
 8000cba:	ec43 2b17 	vmov	d7, r2, r3
 8000cbe:	eeb0 0a47 	vmov.f32	s0, s14
 8000cc2:	eef0 0a67 	vmov.f32	s1, s15
 8000cc6:	f000 fbdf 	bl	8001488 <sin>
 8000cca:	ec51 0b10 	vmov	r0, r1, d0
 8000cce:	a314      	add	r3, pc, #80	; (adr r3, 8000d20 <init_sinus_table+0x98>)
 8000cd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000cd4:	f7ff fc54 	bl	8000580 <__aeabi_dmul>
 8000cd8:	4602      	mov	r2, r0
 8000cda:	460b      	mov	r3, r1
 8000cdc:	4610      	mov	r0, r2
 8000cde:	4619      	mov	r1, r3
 8000ce0:	a30f      	add	r3, pc, #60	; (adr r3, 8000d20 <init_sinus_table+0x98>)
 8000ce2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000ce6:	f7ff fa95 	bl	8000214 <__adddf3>
 8000cea:	4602      	mov	r2, r0
 8000cec:	460b      	mov	r3, r1
 8000cee:	4610      	mov	r0, r2
 8000cf0:	4619      	mov	r1, r3
 8000cf2:	f7ff ff07 	bl	8000b04 <__aeabi_d2uiz>
 8000cf6:	4603      	mov	r3, r0
 8000cf8:	b299      	uxth	r1, r3
 8000cfa:	4a0c      	ldr	r2, [pc, #48]	; (8000d2c <init_sinus_table+0xa4>)
 8000cfc:	687b      	ldr	r3, [r7, #4]
 8000cfe:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
    for  (uint32_t i = 0; i < BUFFER_SIZE_SINUS; i++)
 8000d02:	687b      	ldr	r3, [r7, #4]
 8000d04:	3301      	adds	r3, #1
 8000d06:	607b      	str	r3, [r7, #4]
 8000d08:	687b      	ldr	r3, [r7, #4]
 8000d0a:	f5b3 5f7a 	cmp.w	r3, #16000	; 0x3e80
 8000d0e:	d3c1      	bcc.n	8000c94 <init_sinus_table+0xc>
    }
}
 8000d10:	bf00      	nop
 8000d12:	bf00      	nop
 8000d14:	3708      	adds	r7, #8
 8000d16:	46bd      	mov	sp, r7
 8000d18:	bd80      	pop	{r7, pc}
 8000d1a:	bf00      	nop
 8000d1c:	f3af 8000 	nop.w
 8000d20:	00000000 	.word	0x00000000
 8000d24:	4072c000 	.word	0x4072c000
 8000d28:	40cf4000 	.word	0x40cf4000
 8000d2c:	20000020 	.word	0x20000020
 8000d30:	fc8b007a 	.word	0xfc8b007a
 8000d34:	401921fa 	.word	0x401921fa

08000d38 <main>:

// Main
int main(void)
{
 8000d38:	b580      	push	{r7, lr}
 8000d3a:	b082      	sub	sp, #8
 8000d3c:	af00      	add	r7, sp, #0
	// Initialize peripherals
	GPIO_Init();
 8000d3e:	f7ff ff5f 	bl	8000c00 <GPIO_Init>
	USART2_Init();
 8000d42:	f000 f8af 	bl	8000ea4 <USART2_Init>
	DMA_bis_Init();
 8000d46:	f7ff fefd 	bl	8000b44 <DMA_bis_Init>

    __HAL_RCC_DAC_CLK_ENABLE();
 8000d4a:	2300      	movs	r3, #0
 8000d4c:	607b      	str	r3, [r7, #4]
 8000d4e:	4b10      	ldr	r3, [pc, #64]	; (8000d90 <main+0x58>)
 8000d50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d52:	4a0f      	ldr	r2, [pc, #60]	; (8000d90 <main+0x58>)
 8000d54:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000d58:	6413      	str	r3, [r2, #64]	; 0x40
 8000d5a:	4b0d      	ldr	r3, [pc, #52]	; (8000d90 <main+0x58>)
 8000d5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d5e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8000d62:	607b      	str	r3, [r7, #4]
 8000d64:	687b      	ldr	r3, [r7, #4]
	DAC1->CR |= DAC_CR_MAMP1_3 | DAC_CR_MAMP1_1 | DAC_CR_MAMP1_0;
 8000d66:	4b0b      	ldr	r3, [pc, #44]	; (8000d94 <main+0x5c>)
 8000d68:	681b      	ldr	r3, [r3, #0]
 8000d6a:	4a0a      	ldr	r2, [pc, #40]	; (8000d94 <main+0x5c>)
 8000d6c:	f443 6330 	orr.w	r3, r3, #2816	; 0xb00
 8000d70:	6013      	str	r3, [r2, #0]
	DAC1->CR |= DAC_CR_DMAEN1;
 8000d72:	4b08      	ldr	r3, [pc, #32]	; (8000d94 <main+0x5c>)
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	4a07      	ldr	r2, [pc, #28]	; (8000d94 <main+0x5c>)
 8000d78:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000d7c:	6013      	str	r3, [r2, #0]
	DAC1->CR |= DAC_CR_EN1;
 8000d7e:	4b05      	ldr	r3, [pc, #20]	; (8000d94 <main+0x5c>)
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	4a04      	ldr	r2, [pc, #16]	; (8000d94 <main+0x5c>)
 8000d84:	f043 0301 	orr.w	r3, r3, #1
 8000d88:	6013      	str	r3, [r2, #0]

	init_sinus_table();
 8000d8a:	f7ff ff7d 	bl	8000c88 <init_sinus_table>

	// Infinite loop
	while(1)
 8000d8e:	e7fe      	b.n	8000d8e <main+0x56>
 8000d90:	40023800 	.word	0x40023800
 8000d94:	40007400 	.word	0x40007400

08000d98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d98:	b480      	push	{r7}
 8000d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000d9c:	e7fe      	b.n	8000d9c <NMI_Handler+0x4>

08000d9e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d9e:	b480      	push	{r7}
 8000da0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000da2:	e7fe      	b.n	8000da2 <HardFault_Handler+0x4>

08000da4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000da4:	b480      	push	{r7}
 8000da6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000da8:	e7fe      	b.n	8000da8 <MemManage_Handler+0x4>

08000daa <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000daa:	b480      	push	{r7}
 8000dac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000dae:	e7fe      	b.n	8000dae <BusFault_Handler+0x4>

08000db0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000db0:	b480      	push	{r7}
 8000db2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000db4:	e7fe      	b.n	8000db4 <UsageFault_Handler+0x4>

08000db6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000db6:	b480      	push	{r7}
 8000db8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000dba:	bf00      	nop
 8000dbc:	46bd      	mov	sp, r7
 8000dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dc2:	4770      	bx	lr

08000dc4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000dc4:	b480      	push	{r7}
 8000dc6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000dc8:	bf00      	nop
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr

08000dd2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000dd2:	b480      	push	{r7}
 8000dd4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000dd6:	bf00      	nop
 8000dd8:	46bd      	mov	sp, r7
 8000dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dde:	4770      	bx	lr

08000de0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000de4:	f000 f8ce 	bl	8000f84 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000de8:	bf00      	nop
 8000dea:	bd80      	pop	{r7, pc}

08000dec <EXTI15_10_IRQHandler>:
/* please refer to the startup file (startup_stm32f4xx.s).                    */
/******************************************************************************/

/* USER CODE BEGIN 1 */
void EXTI15_10_IRQHandler(void)   // <----- The ISR Function We're Looking For!
{
 8000dec:	b480      	push	{r7}
 8000dee:	af00      	add	r7, sp, #0
	EXTI->PR = EXTI_PR_PR13;
 8000df0:	4b07      	ldr	r3, [pc, #28]	; (8000e10 <EXTI15_10_IRQHandler+0x24>)
 8000df2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000df6:	615a      	str	r2, [r3, #20]

    DMA1_Stream5->CR |= (DMA_SxCR_EN); // set EN bit to activate DMA stream
 8000df8:	4b06      	ldr	r3, [pc, #24]	; (8000e14 <EXTI15_10_IRQHandler+0x28>)
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	4a05      	ldr	r2, [pc, #20]	; (8000e14 <EXTI15_10_IRQHandler+0x28>)
 8000dfe:	f043 0301 	orr.w	r3, r3, #1
 8000e02:	6013      	str	r3, [r2, #0]
}
 8000e04:	bf00      	nop
 8000e06:	46bd      	mov	sp, r7
 8000e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e0c:	4770      	bx	lr
 8000e0e:	bf00      	nop
 8000e10:	40013c00 	.word	0x40013c00
 8000e14:	40026088 	.word	0x40026088

08000e18 <DMA1_Stream5_IRQHandler>:

void DMA1_Stream5_IRQHandler(void)
{
 8000e18:	b480      	push	{r7}
 8000e1a:	b083      	sub	sp, #12
 8000e1c:	af00      	add	r7, sp, #0
	// Variable declaration
	uint8_t index = 0U;
 8000e1e:	2300      	movs	r3, #0
 8000e20:	71fb      	strb	r3, [r7, #7]

	// Clear DMA IT flags
	DMA1->HIFCR = DMA_HIFCR_CTCIF5 | DMA_HIFCR_CHTIF5 | DMA_HIFCR_CTEIF5 | DMA_HIFCR_CDMEIF5 | DMA_HIFCR_CFEIF5;
 8000e22:	4b08      	ldr	r3, [pc, #32]	; (8000e44 <DMA1_Stream5_IRQHandler+0x2c>)
 8000e24:	f44f 6274 	mov.w	r2, #3904	; 0xf40
 8000e28:	60da      	str	r2, [r3, #12]

	// Clear USART2 TC bit
	USART2->SR  &= ~(USART_SR_TC);
 8000e2a:	4b07      	ldr	r3, [pc, #28]	; (8000e48 <DMA1_Stream5_IRQHandler+0x30>)
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	4a06      	ldr	r2, [pc, #24]	; (8000e48 <DMA1_Stream5_IRQHandler+0x30>)
 8000e30:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000e34:	6013      	str	r3, [r2, #0]
}
 8000e36:	bf00      	nop
 8000e38:	370c      	adds	r7, #12
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e40:	4770      	bx	lr
 8000e42:	bf00      	nop
 8000e44:	40026000 	.word	0x40026000
 8000e48:	40004400 	.word	0x40004400

08000e4c <DMA1_Stream6_IRQHandler>:

void DMA1_Stream6_IRQHandler(void)
{
 8000e4c:	b480      	push	{r7}
 8000e4e:	b083      	sub	sp, #12
 8000e50:	af00      	add	r7, sp, #0
	// Variable declaration
	uint8_t index = 0U;
 8000e52:	2300      	movs	r3, #0
 8000e54:	71fb      	strb	r3, [r7, #7]

	// Clear DMA IT flags
	DMA1->HIFCR = DMA_HIFCR_CTCIF6 | DMA_HIFCR_CHTIF6 | DMA_HIFCR_CTEIF6 | DMA_HIFCR_CDMEIF6 | DMA_HIFCR_CFEIF6;
 8000e56:	4b08      	ldr	r3, [pc, #32]	; (8000e78 <DMA1_Stream6_IRQHandler+0x2c>)
 8000e58:	f44f 1274 	mov.w	r2, #3997696	; 0x3d0000
 8000e5c:	60da      	str	r2, [r3, #12]

	// Clear USART2 TC bit
	USART2->SR  &= ~(USART_SR_TC);
 8000e5e:	4b07      	ldr	r3, [pc, #28]	; (8000e7c <DMA1_Stream6_IRQHandler+0x30>)
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	4a06      	ldr	r2, [pc, #24]	; (8000e7c <DMA1_Stream6_IRQHandler+0x30>)
 8000e64:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000e68:	6013      	str	r3, [r2, #0]
//			{
//				table1[index] = table1[index] + 10;
//			}
//		}
//	}
}
 8000e6a:	bf00      	nop
 8000e6c:	370c      	adds	r7, #12
 8000e6e:	46bd      	mov	sp, r7
 8000e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e74:	4770      	bx	lr
 8000e76:	bf00      	nop
 8000e78:	40026000 	.word	0x40026000
 8000e7c:	40004400 	.word	0x40004400

08000e80 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000e80:	b480      	push	{r7}
 8000e82:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000e84:	4b06      	ldr	r3, [pc, #24]	; (8000ea0 <SystemInit+0x20>)
 8000e86:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e8a:	4a05      	ldr	r2, [pc, #20]	; (8000ea0 <SystemInit+0x20>)
 8000e8c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000e90:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000e94:	bf00      	nop
 8000e96:	46bd      	mov	sp, r7
 8000e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9c:	4770      	bx	lr
 8000e9e:	bf00      	nop
 8000ea0:	e000ed00 	.word	0xe000ed00

08000ea4 <USART2_Init>:
#include <stm32f446xx.h>
#include "main.h"
#include "usart.h"


void USART2_Init(void){
 8000ea4:	b480      	push	{r7}
 8000ea6:	af00      	add	r7, sp, #0
	/* USART2 Init */
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;			// ABP1
 8000ea8:	4b1e      	ldr	r3, [pc, #120]	; (8000f24 <USART2_Init+0x80>)
 8000eaa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000eac:	4a1d      	ldr	r2, [pc, #116]	; (8000f24 <USART2_Init+0x80>)
 8000eae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000eb2:	6413      	str	r3, [r2, #64]	; 0x40
	GPIOA->MODER |= ALT_MODE<<4;					// PA2
 8000eb4:	4b1c      	ldr	r3, [pc, #112]	; (8000f28 <USART2_Init+0x84>)
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	4a1b      	ldr	r2, [pc, #108]	; (8000f28 <USART2_Init+0x84>)
 8000eba:	f043 0320 	orr.w	r3, r3, #32
 8000ebe:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= ALT_MODE<<6;					// PA3
 8000ec0:	4b19      	ldr	r3, [pc, #100]	; (8000f28 <USART2_Init+0x84>)
 8000ec2:	681b      	ldr	r3, [r3, #0]
 8000ec4:	4a18      	ldr	r2, [pc, #96]	; (8000f28 <USART2_Init+0x84>)
 8000ec6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000eca:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] |= 7<<8;							// USART2
 8000ecc:	4b16      	ldr	r3, [pc, #88]	; (8000f28 <USART2_Init+0x84>)
 8000ece:	6a1b      	ldr	r3, [r3, #32]
 8000ed0:	4a15      	ldr	r2, [pc, #84]	; (8000f28 <USART2_Init+0x84>)
 8000ed2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8000ed6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= 7<<12;							// USART2
 8000ed8:	4b13      	ldr	r3, [pc, #76]	; (8000f28 <USART2_Init+0x84>)
 8000eda:	6a1b      	ldr	r3, [r3, #32]
 8000edc:	4a12      	ldr	r2, [pc, #72]	; (8000f28 <USART2_Init+0x84>)
 8000ede:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 8000ee2:	6213      	str	r3, [r2, #32]
	USART2->BRR  = 139;								// 115200 - APB1:16Mhz
 8000ee4:	4b11      	ldr	r3, [pc, #68]	; (8000f2c <USART2_Init+0x88>)
 8000ee6:	228b      	movs	r2, #139	; 0x8b
 8000ee8:	609a      	str	r2, [r3, #8]
	USART2->CR1 |= USART_CR1_TE | USART_CR1_RE;		// RX-TX
 8000eea:	4b10      	ldr	r3, [pc, #64]	; (8000f2c <USART2_Init+0x88>)
 8000eec:	68db      	ldr	r3, [r3, #12]
 8000eee:	4a0f      	ldr	r2, [pc, #60]	; (8000f2c <USART2_Init+0x88>)
 8000ef0:	f043 030c 	orr.w	r3, r3, #12
 8000ef4:	60d3      	str	r3, [r2, #12]
	USART2->CR1 |= USART_CR1_UE;
 8000ef6:	4b0d      	ldr	r3, [pc, #52]	; (8000f2c <USART2_Init+0x88>)
 8000ef8:	68db      	ldr	r3, [r3, #12]
 8000efa:	4a0c      	ldr	r2, [pc, #48]	; (8000f2c <USART2_Init+0x88>)
 8000efc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000f00:	60d3      	str	r3, [r2, #12]
	USART2->SR  &= ~(USART_SR_TC);                  // Clear TC bit
 8000f02:	4b0a      	ldr	r3, [pc, #40]	; (8000f2c <USART2_Init+0x88>)
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	4a09      	ldr	r2, [pc, #36]	; (8000f2c <USART2_Init+0x88>)
 8000f08:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000f0c:	6013      	str	r3, [r2, #0]
	USART2->CR3 |= USART_CR3_DMAT;	                // Activate DMA on USART2
 8000f0e:	4b07      	ldr	r3, [pc, #28]	; (8000f2c <USART2_Init+0x88>)
 8000f10:	695b      	ldr	r3, [r3, #20]
 8000f12:	4a06      	ldr	r2, [pc, #24]	; (8000f2c <USART2_Init+0x88>)
 8000f14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f18:	6153      	str	r3, [r2, #20]
}
 8000f1a:	bf00      	nop
 8000f1c:	46bd      	mov	sp, r7
 8000f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f22:	4770      	bx	lr
 8000f24:	40023800 	.word	0x40023800
 8000f28:	40020000 	.word	0x40020000
 8000f2c:	40004400 	.word	0x40004400

08000f30 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000f30:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000f68 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000f34:	480d      	ldr	r0, [pc, #52]	; (8000f6c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000f36:	490e      	ldr	r1, [pc, #56]	; (8000f70 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000f38:	4a0e      	ldr	r2, [pc, #56]	; (8000f74 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000f3a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000f3c:	e002      	b.n	8000f44 <LoopCopyDataInit>

08000f3e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000f3e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000f40:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000f42:	3304      	adds	r3, #4

08000f44 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000f44:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000f46:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000f48:	d3f9      	bcc.n	8000f3e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000f4a:	4a0b      	ldr	r2, [pc, #44]	; (8000f78 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000f4c:	4c0b      	ldr	r4, [pc, #44]	; (8000f7c <LoopFillZerobss+0x26>)
  movs r3, #0
 8000f4e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000f50:	e001      	b.n	8000f56 <LoopFillZerobss>

08000f52 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000f52:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000f54:	3204      	adds	r2, #4

08000f56 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000f56:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000f58:	d3fb      	bcc.n	8000f52 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8000f5a:	f7ff ff91 	bl	8000e80 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000f5e:	f000 fa6d 	bl	800143c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000f62:	f7ff fee9 	bl	8000d38 <main>
  bx  lr    
 8000f66:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000f68:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000f6c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000f70:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000f74:	08002718 	.word	0x08002718
  ldr r2, =_sbss
 8000f78:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000f7c:	20007d24 	.word	0x20007d24

08000f80 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000f80:	e7fe      	b.n	8000f80 <ADC_IRQHandler>
	...

08000f84 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000f84:	b480      	push	{r7}
 8000f86:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000f88:	4b06      	ldr	r3, [pc, #24]	; (8000fa4 <HAL_IncTick+0x20>)
 8000f8a:	781b      	ldrb	r3, [r3, #0]
 8000f8c:	461a      	mov	r2, r3
 8000f8e:	4b06      	ldr	r3, [pc, #24]	; (8000fa8 <HAL_IncTick+0x24>)
 8000f90:	681b      	ldr	r3, [r3, #0]
 8000f92:	4413      	add	r3, r2
 8000f94:	4a04      	ldr	r2, [pc, #16]	; (8000fa8 <HAL_IncTick+0x24>)
 8000f96:	6013      	str	r3, [r2, #0]
}
 8000f98:	bf00      	nop
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa0:	4770      	bx	lr
 8000fa2:	bf00      	nop
 8000fa4:	20000000 	.word	0x20000000
 8000fa8:	20007d20 	.word	0x20007d20

08000fac <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8000fac:	b480      	push	{r7}
 8000fae:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000fb0:	4b04      	ldr	r3, [pc, #16]	; (8000fc4 <__NVIC_GetPriorityGrouping+0x18>)
 8000fb2:	68db      	ldr	r3, [r3, #12]
 8000fb4:	0a1b      	lsrs	r3, r3, #8
 8000fb6:	f003 0307 	and.w	r3, r3, #7
}
 8000fba:	4618      	mov	r0, r3
 8000fbc:	46bd      	mov	sp, r7
 8000fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc2:	4770      	bx	lr
 8000fc4:	e000ed00 	.word	0xe000ed00

08000fc8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000fc8:	b480      	push	{r7}
 8000fca:	b083      	sub	sp, #12
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	4603      	mov	r3, r0
 8000fd0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000fd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fd6:	2b00      	cmp	r3, #0
 8000fd8:	db0b      	blt.n	8000ff2 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000fda:	79fb      	ldrb	r3, [r7, #7]
 8000fdc:	f003 021f 	and.w	r2, r3, #31
 8000fe0:	4907      	ldr	r1, [pc, #28]	; (8001000 <__NVIC_EnableIRQ+0x38>)
 8000fe2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fe6:	095b      	lsrs	r3, r3, #5
 8000fe8:	2001      	movs	r0, #1
 8000fea:	fa00 f202 	lsl.w	r2, r0, r2
 8000fee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000ff2:	bf00      	nop
 8000ff4:	370c      	adds	r7, #12
 8000ff6:	46bd      	mov	sp, r7
 8000ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ffc:	4770      	bx	lr
 8000ffe:	bf00      	nop
 8001000:	e000e100 	.word	0xe000e100

08001004 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001004:	b480      	push	{r7}
 8001006:	b083      	sub	sp, #12
 8001008:	af00      	add	r7, sp, #0
 800100a:	4603      	mov	r3, r0
 800100c:	6039      	str	r1, [r7, #0]
 800100e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001010:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001014:	2b00      	cmp	r3, #0
 8001016:	db0a      	blt.n	800102e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001018:	683b      	ldr	r3, [r7, #0]
 800101a:	b2da      	uxtb	r2, r3
 800101c:	490c      	ldr	r1, [pc, #48]	; (8001050 <__NVIC_SetPriority+0x4c>)
 800101e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001022:	0112      	lsls	r2, r2, #4
 8001024:	b2d2      	uxtb	r2, r2
 8001026:	440b      	add	r3, r1
 8001028:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800102c:	e00a      	b.n	8001044 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800102e:	683b      	ldr	r3, [r7, #0]
 8001030:	b2da      	uxtb	r2, r3
 8001032:	4908      	ldr	r1, [pc, #32]	; (8001054 <__NVIC_SetPriority+0x50>)
 8001034:	79fb      	ldrb	r3, [r7, #7]
 8001036:	f003 030f 	and.w	r3, r3, #15
 800103a:	3b04      	subs	r3, #4
 800103c:	0112      	lsls	r2, r2, #4
 800103e:	b2d2      	uxtb	r2, r2
 8001040:	440b      	add	r3, r1
 8001042:	761a      	strb	r2, [r3, #24]
}
 8001044:	bf00      	nop
 8001046:	370c      	adds	r7, #12
 8001048:	46bd      	mov	sp, r7
 800104a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800104e:	4770      	bx	lr
 8001050:	e000e100 	.word	0xe000e100
 8001054:	e000ed00 	.word	0xe000ed00

08001058 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001058:	b480      	push	{r7}
 800105a:	b089      	sub	sp, #36	; 0x24
 800105c:	af00      	add	r7, sp, #0
 800105e:	60f8      	str	r0, [r7, #12]
 8001060:	60b9      	str	r1, [r7, #8]
 8001062:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001064:	68fb      	ldr	r3, [r7, #12]
 8001066:	f003 0307 	and.w	r3, r3, #7
 800106a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800106c:	69fb      	ldr	r3, [r7, #28]
 800106e:	f1c3 0307 	rsb	r3, r3, #7
 8001072:	2b04      	cmp	r3, #4
 8001074:	bf28      	it	cs
 8001076:	2304      	movcs	r3, #4
 8001078:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800107a:	69fb      	ldr	r3, [r7, #28]
 800107c:	3304      	adds	r3, #4
 800107e:	2b06      	cmp	r3, #6
 8001080:	d902      	bls.n	8001088 <NVIC_EncodePriority+0x30>
 8001082:	69fb      	ldr	r3, [r7, #28]
 8001084:	3b03      	subs	r3, #3
 8001086:	e000      	b.n	800108a <NVIC_EncodePriority+0x32>
 8001088:	2300      	movs	r3, #0
 800108a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800108c:	f04f 32ff 	mov.w	r2, #4294967295
 8001090:	69bb      	ldr	r3, [r7, #24]
 8001092:	fa02 f303 	lsl.w	r3, r2, r3
 8001096:	43da      	mvns	r2, r3
 8001098:	68bb      	ldr	r3, [r7, #8]
 800109a:	401a      	ands	r2, r3
 800109c:	697b      	ldr	r3, [r7, #20]
 800109e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80010a0:	f04f 31ff 	mov.w	r1, #4294967295
 80010a4:	697b      	ldr	r3, [r7, #20]
 80010a6:	fa01 f303 	lsl.w	r3, r1, r3
 80010aa:	43d9      	mvns	r1, r3
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80010b0:	4313      	orrs	r3, r2
         );
}
 80010b2:	4618      	mov	r0, r3
 80010b4:	3724      	adds	r7, #36	; 0x24
 80010b6:	46bd      	mov	sp, r7
 80010b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010bc:	4770      	bx	lr

080010be <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80010be:	b580      	push	{r7, lr}
 80010c0:	b086      	sub	sp, #24
 80010c2:	af00      	add	r7, sp, #0
 80010c4:	4603      	mov	r3, r0
 80010c6:	60b9      	str	r1, [r7, #8]
 80010c8:	607a      	str	r2, [r7, #4]
 80010ca:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80010cc:	2300      	movs	r3, #0
 80010ce:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80010d0:	f7ff ff6c 	bl	8000fac <__NVIC_GetPriorityGrouping>
 80010d4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80010d6:	687a      	ldr	r2, [r7, #4]
 80010d8:	68b9      	ldr	r1, [r7, #8]
 80010da:	6978      	ldr	r0, [r7, #20]
 80010dc:	f7ff ffbc 	bl	8001058 <NVIC_EncodePriority>
 80010e0:	4602      	mov	r2, r0
 80010e2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80010e6:	4611      	mov	r1, r2
 80010e8:	4618      	mov	r0, r3
 80010ea:	f7ff ff8b 	bl	8001004 <__NVIC_SetPriority>
}
 80010ee:	bf00      	nop
 80010f0:	3718      	adds	r7, #24
 80010f2:	46bd      	mov	sp, r7
 80010f4:	bd80      	pop	{r7, pc}

080010f6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80010f6:	b580      	push	{r7, lr}
 80010f8:	b082      	sub	sp, #8
 80010fa:	af00      	add	r7, sp, #0
 80010fc:	4603      	mov	r3, r0
 80010fe:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001100:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001104:	4618      	mov	r0, r3
 8001106:	f7ff ff5f 	bl	8000fc8 <__NVIC_EnableIRQ>
}
 800110a:	bf00      	nop
 800110c:	3708      	adds	r7, #8
 800110e:	46bd      	mov	sp, r7
 8001110:	bd80      	pop	{r7, pc}
	...

08001114 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001114:	b480      	push	{r7}
 8001116:	b089      	sub	sp, #36	; 0x24
 8001118:	af00      	add	r7, sp, #0
 800111a:	6078      	str	r0, [r7, #4]
 800111c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 800111e:	2300      	movs	r3, #0
 8001120:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001122:	2300      	movs	r3, #0
 8001124:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8001126:	2300      	movs	r3, #0
 8001128:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800112a:	2300      	movs	r3, #0
 800112c:	61fb      	str	r3, [r7, #28]
 800112e:	e165      	b.n	80013fc <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001130:	2201      	movs	r2, #1
 8001132:	69fb      	ldr	r3, [r7, #28]
 8001134:	fa02 f303 	lsl.w	r3, r2, r3
 8001138:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800113a:	683b      	ldr	r3, [r7, #0]
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	697a      	ldr	r2, [r7, #20]
 8001140:	4013      	ands	r3, r2
 8001142:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001144:	693a      	ldr	r2, [r7, #16]
 8001146:	697b      	ldr	r3, [r7, #20]
 8001148:	429a      	cmp	r2, r3
 800114a:	f040 8154 	bne.w	80013f6 <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800114e:	683b      	ldr	r3, [r7, #0]
 8001150:	685b      	ldr	r3, [r3, #4]
 8001152:	f003 0303 	and.w	r3, r3, #3
 8001156:	2b01      	cmp	r3, #1
 8001158:	d005      	beq.n	8001166 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800115a:	683b      	ldr	r3, [r7, #0]
 800115c:	685b      	ldr	r3, [r3, #4]
 800115e:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001162:	2b02      	cmp	r3, #2
 8001164:	d130      	bne.n	80011c8 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	689b      	ldr	r3, [r3, #8]
 800116a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800116c:	69fb      	ldr	r3, [r7, #28]
 800116e:	005b      	lsls	r3, r3, #1
 8001170:	2203      	movs	r2, #3
 8001172:	fa02 f303 	lsl.w	r3, r2, r3
 8001176:	43db      	mvns	r3, r3
 8001178:	69ba      	ldr	r2, [r7, #24]
 800117a:	4013      	ands	r3, r2
 800117c:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800117e:	683b      	ldr	r3, [r7, #0]
 8001180:	68da      	ldr	r2, [r3, #12]
 8001182:	69fb      	ldr	r3, [r7, #28]
 8001184:	005b      	lsls	r3, r3, #1
 8001186:	fa02 f303 	lsl.w	r3, r2, r3
 800118a:	69ba      	ldr	r2, [r7, #24]
 800118c:	4313      	orrs	r3, r2
 800118e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	69ba      	ldr	r2, [r7, #24]
 8001194:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001196:	687b      	ldr	r3, [r7, #4]
 8001198:	685b      	ldr	r3, [r3, #4]
 800119a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800119c:	2201      	movs	r2, #1
 800119e:	69fb      	ldr	r3, [r7, #28]
 80011a0:	fa02 f303 	lsl.w	r3, r2, r3
 80011a4:	43db      	mvns	r3, r3
 80011a6:	69ba      	ldr	r2, [r7, #24]
 80011a8:	4013      	ands	r3, r2
 80011aa:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80011ac:	683b      	ldr	r3, [r7, #0]
 80011ae:	685b      	ldr	r3, [r3, #4]
 80011b0:	091b      	lsrs	r3, r3, #4
 80011b2:	f003 0201 	and.w	r2, r3, #1
 80011b6:	69fb      	ldr	r3, [r7, #28]
 80011b8:	fa02 f303 	lsl.w	r3, r2, r3
 80011bc:	69ba      	ldr	r2, [r7, #24]
 80011be:	4313      	orrs	r3, r2
 80011c0:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	69ba      	ldr	r2, [r7, #24]
 80011c6:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80011c8:	683b      	ldr	r3, [r7, #0]
 80011ca:	685b      	ldr	r3, [r3, #4]
 80011cc:	f003 0303 	and.w	r3, r3, #3
 80011d0:	2b03      	cmp	r3, #3
 80011d2:	d017      	beq.n	8001204 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80011d4:	687b      	ldr	r3, [r7, #4]
 80011d6:	68db      	ldr	r3, [r3, #12]
 80011d8:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80011da:	69fb      	ldr	r3, [r7, #28]
 80011dc:	005b      	lsls	r3, r3, #1
 80011de:	2203      	movs	r2, #3
 80011e0:	fa02 f303 	lsl.w	r3, r2, r3
 80011e4:	43db      	mvns	r3, r3
 80011e6:	69ba      	ldr	r2, [r7, #24]
 80011e8:	4013      	ands	r3, r2
 80011ea:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80011ec:	683b      	ldr	r3, [r7, #0]
 80011ee:	689a      	ldr	r2, [r3, #8]
 80011f0:	69fb      	ldr	r3, [r7, #28]
 80011f2:	005b      	lsls	r3, r3, #1
 80011f4:	fa02 f303 	lsl.w	r3, r2, r3
 80011f8:	69ba      	ldr	r2, [r7, #24]
 80011fa:	4313      	orrs	r3, r2
 80011fc:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	69ba      	ldr	r2, [r7, #24]
 8001202:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001204:	683b      	ldr	r3, [r7, #0]
 8001206:	685b      	ldr	r3, [r3, #4]
 8001208:	f003 0303 	and.w	r3, r3, #3
 800120c:	2b02      	cmp	r3, #2
 800120e:	d123      	bne.n	8001258 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001210:	69fb      	ldr	r3, [r7, #28]
 8001212:	08da      	lsrs	r2, r3, #3
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	3208      	adds	r2, #8
 8001218:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800121c:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800121e:	69fb      	ldr	r3, [r7, #28]
 8001220:	f003 0307 	and.w	r3, r3, #7
 8001224:	009b      	lsls	r3, r3, #2
 8001226:	220f      	movs	r2, #15
 8001228:	fa02 f303 	lsl.w	r3, r2, r3
 800122c:	43db      	mvns	r3, r3
 800122e:	69ba      	ldr	r2, [r7, #24]
 8001230:	4013      	ands	r3, r2
 8001232:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001234:	683b      	ldr	r3, [r7, #0]
 8001236:	691a      	ldr	r2, [r3, #16]
 8001238:	69fb      	ldr	r3, [r7, #28]
 800123a:	f003 0307 	and.w	r3, r3, #7
 800123e:	009b      	lsls	r3, r3, #2
 8001240:	fa02 f303 	lsl.w	r3, r2, r3
 8001244:	69ba      	ldr	r2, [r7, #24]
 8001246:	4313      	orrs	r3, r2
 8001248:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 800124a:	69fb      	ldr	r3, [r7, #28]
 800124c:	08da      	lsrs	r2, r3, #3
 800124e:	687b      	ldr	r3, [r7, #4]
 8001250:	3208      	adds	r2, #8
 8001252:	69b9      	ldr	r1, [r7, #24]
 8001254:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800125e:	69fb      	ldr	r3, [r7, #28]
 8001260:	005b      	lsls	r3, r3, #1
 8001262:	2203      	movs	r2, #3
 8001264:	fa02 f303 	lsl.w	r3, r2, r3
 8001268:	43db      	mvns	r3, r3
 800126a:	69ba      	ldr	r2, [r7, #24]
 800126c:	4013      	ands	r3, r2
 800126e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001270:	683b      	ldr	r3, [r7, #0]
 8001272:	685b      	ldr	r3, [r3, #4]
 8001274:	f003 0203 	and.w	r2, r3, #3
 8001278:	69fb      	ldr	r3, [r7, #28]
 800127a:	005b      	lsls	r3, r3, #1
 800127c:	fa02 f303 	lsl.w	r3, r2, r3
 8001280:	69ba      	ldr	r2, [r7, #24]
 8001282:	4313      	orrs	r3, r2
 8001284:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	69ba      	ldr	r2, [r7, #24]
 800128a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800128c:	683b      	ldr	r3, [r7, #0]
 800128e:	685b      	ldr	r3, [r3, #4]
 8001290:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001294:	2b00      	cmp	r3, #0
 8001296:	f000 80ae 	beq.w	80013f6 <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800129a:	2300      	movs	r3, #0
 800129c:	60fb      	str	r3, [r7, #12]
 800129e:	4b5d      	ldr	r3, [pc, #372]	; (8001414 <HAL_GPIO_Init+0x300>)
 80012a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012a2:	4a5c      	ldr	r2, [pc, #368]	; (8001414 <HAL_GPIO_Init+0x300>)
 80012a4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80012a8:	6453      	str	r3, [r2, #68]	; 0x44
 80012aa:	4b5a      	ldr	r3, [pc, #360]	; (8001414 <HAL_GPIO_Init+0x300>)
 80012ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012ae:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80012b2:	60fb      	str	r3, [r7, #12]
 80012b4:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80012b6:	4a58      	ldr	r2, [pc, #352]	; (8001418 <HAL_GPIO_Init+0x304>)
 80012b8:	69fb      	ldr	r3, [r7, #28]
 80012ba:	089b      	lsrs	r3, r3, #2
 80012bc:	3302      	adds	r3, #2
 80012be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80012c2:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80012c4:	69fb      	ldr	r3, [r7, #28]
 80012c6:	f003 0303 	and.w	r3, r3, #3
 80012ca:	009b      	lsls	r3, r3, #2
 80012cc:	220f      	movs	r2, #15
 80012ce:	fa02 f303 	lsl.w	r3, r2, r3
 80012d2:	43db      	mvns	r3, r3
 80012d4:	69ba      	ldr	r2, [r7, #24]
 80012d6:	4013      	ands	r3, r2
 80012d8:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	4a4f      	ldr	r2, [pc, #316]	; (800141c <HAL_GPIO_Init+0x308>)
 80012de:	4293      	cmp	r3, r2
 80012e0:	d025      	beq.n	800132e <HAL_GPIO_Init+0x21a>
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	4a4e      	ldr	r2, [pc, #312]	; (8001420 <HAL_GPIO_Init+0x30c>)
 80012e6:	4293      	cmp	r3, r2
 80012e8:	d01f      	beq.n	800132a <HAL_GPIO_Init+0x216>
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	4a4d      	ldr	r2, [pc, #308]	; (8001424 <HAL_GPIO_Init+0x310>)
 80012ee:	4293      	cmp	r3, r2
 80012f0:	d019      	beq.n	8001326 <HAL_GPIO_Init+0x212>
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	4a4c      	ldr	r2, [pc, #304]	; (8001428 <HAL_GPIO_Init+0x314>)
 80012f6:	4293      	cmp	r3, r2
 80012f8:	d013      	beq.n	8001322 <HAL_GPIO_Init+0x20e>
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	4a4b      	ldr	r2, [pc, #300]	; (800142c <HAL_GPIO_Init+0x318>)
 80012fe:	4293      	cmp	r3, r2
 8001300:	d00d      	beq.n	800131e <HAL_GPIO_Init+0x20a>
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	4a4a      	ldr	r2, [pc, #296]	; (8001430 <HAL_GPIO_Init+0x31c>)
 8001306:	4293      	cmp	r3, r2
 8001308:	d007      	beq.n	800131a <HAL_GPIO_Init+0x206>
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	4a49      	ldr	r2, [pc, #292]	; (8001434 <HAL_GPIO_Init+0x320>)
 800130e:	4293      	cmp	r3, r2
 8001310:	d101      	bne.n	8001316 <HAL_GPIO_Init+0x202>
 8001312:	2306      	movs	r3, #6
 8001314:	e00c      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 8001316:	2307      	movs	r3, #7
 8001318:	e00a      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 800131a:	2305      	movs	r3, #5
 800131c:	e008      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 800131e:	2304      	movs	r3, #4
 8001320:	e006      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 8001322:	2303      	movs	r3, #3
 8001324:	e004      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 8001326:	2302      	movs	r3, #2
 8001328:	e002      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 800132a:	2301      	movs	r3, #1
 800132c:	e000      	b.n	8001330 <HAL_GPIO_Init+0x21c>
 800132e:	2300      	movs	r3, #0
 8001330:	69fa      	ldr	r2, [r7, #28]
 8001332:	f002 0203 	and.w	r2, r2, #3
 8001336:	0092      	lsls	r2, r2, #2
 8001338:	4093      	lsls	r3, r2
 800133a:	69ba      	ldr	r2, [r7, #24]
 800133c:	4313      	orrs	r3, r2
 800133e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001340:	4935      	ldr	r1, [pc, #212]	; (8001418 <HAL_GPIO_Init+0x304>)
 8001342:	69fb      	ldr	r3, [r7, #28]
 8001344:	089b      	lsrs	r3, r3, #2
 8001346:	3302      	adds	r3, #2
 8001348:	69ba      	ldr	r2, [r7, #24]
 800134a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800134e:	4b3a      	ldr	r3, [pc, #232]	; (8001438 <HAL_GPIO_Init+0x324>)
 8001350:	689b      	ldr	r3, [r3, #8]
 8001352:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001354:	693b      	ldr	r3, [r7, #16]
 8001356:	43db      	mvns	r3, r3
 8001358:	69ba      	ldr	r2, [r7, #24]
 800135a:	4013      	ands	r3, r2
 800135c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800135e:	683b      	ldr	r3, [r7, #0]
 8001360:	685b      	ldr	r3, [r3, #4]
 8001362:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001366:	2b00      	cmp	r3, #0
 8001368:	d003      	beq.n	8001372 <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 800136a:	69ba      	ldr	r2, [r7, #24]
 800136c:	693b      	ldr	r3, [r7, #16]
 800136e:	4313      	orrs	r3, r2
 8001370:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001372:	4a31      	ldr	r2, [pc, #196]	; (8001438 <HAL_GPIO_Init+0x324>)
 8001374:	69bb      	ldr	r3, [r7, #24]
 8001376:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001378:	4b2f      	ldr	r3, [pc, #188]	; (8001438 <HAL_GPIO_Init+0x324>)
 800137a:	68db      	ldr	r3, [r3, #12]
 800137c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800137e:	693b      	ldr	r3, [r7, #16]
 8001380:	43db      	mvns	r3, r3
 8001382:	69ba      	ldr	r2, [r7, #24]
 8001384:	4013      	ands	r3, r2
 8001386:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001388:	683b      	ldr	r3, [r7, #0]
 800138a:	685b      	ldr	r3, [r3, #4]
 800138c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001390:	2b00      	cmp	r3, #0
 8001392:	d003      	beq.n	800139c <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8001394:	69ba      	ldr	r2, [r7, #24]
 8001396:	693b      	ldr	r3, [r7, #16]
 8001398:	4313      	orrs	r3, r2
 800139a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800139c:	4a26      	ldr	r2, [pc, #152]	; (8001438 <HAL_GPIO_Init+0x324>)
 800139e:	69bb      	ldr	r3, [r7, #24]
 80013a0:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 80013a2:	4b25      	ldr	r3, [pc, #148]	; (8001438 <HAL_GPIO_Init+0x324>)
 80013a4:	685b      	ldr	r3, [r3, #4]
 80013a6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80013a8:	693b      	ldr	r3, [r7, #16]
 80013aa:	43db      	mvns	r3, r3
 80013ac:	69ba      	ldr	r2, [r7, #24]
 80013ae:	4013      	ands	r3, r2
 80013b0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80013b2:	683b      	ldr	r3, [r7, #0]
 80013b4:	685b      	ldr	r3, [r3, #4]
 80013b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d003      	beq.n	80013c6 <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 80013be:	69ba      	ldr	r2, [r7, #24]
 80013c0:	693b      	ldr	r3, [r7, #16]
 80013c2:	4313      	orrs	r3, r2
 80013c4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 80013c6:	4a1c      	ldr	r2, [pc, #112]	; (8001438 <HAL_GPIO_Init+0x324>)
 80013c8:	69bb      	ldr	r3, [r7, #24]
 80013ca:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80013cc:	4b1a      	ldr	r3, [pc, #104]	; (8001438 <HAL_GPIO_Init+0x324>)
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80013d2:	693b      	ldr	r3, [r7, #16]
 80013d4:	43db      	mvns	r3, r3
 80013d6:	69ba      	ldr	r2, [r7, #24]
 80013d8:	4013      	ands	r3, r2
 80013da:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80013dc:	683b      	ldr	r3, [r7, #0]
 80013de:	685b      	ldr	r3, [r3, #4]
 80013e0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80013e4:	2b00      	cmp	r3, #0
 80013e6:	d003      	beq.n	80013f0 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 80013e8:	69ba      	ldr	r2, [r7, #24]
 80013ea:	693b      	ldr	r3, [r7, #16]
 80013ec:	4313      	orrs	r3, r2
 80013ee:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80013f0:	4a11      	ldr	r2, [pc, #68]	; (8001438 <HAL_GPIO_Init+0x324>)
 80013f2:	69bb      	ldr	r3, [r7, #24]
 80013f4:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80013f6:	69fb      	ldr	r3, [r7, #28]
 80013f8:	3301      	adds	r3, #1
 80013fa:	61fb      	str	r3, [r7, #28]
 80013fc:	69fb      	ldr	r3, [r7, #28]
 80013fe:	2b0f      	cmp	r3, #15
 8001400:	f67f ae96 	bls.w	8001130 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001404:	bf00      	nop
 8001406:	bf00      	nop
 8001408:	3724      	adds	r7, #36	; 0x24
 800140a:	46bd      	mov	sp, r7
 800140c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001410:	4770      	bx	lr
 8001412:	bf00      	nop
 8001414:	40023800 	.word	0x40023800
 8001418:	40013800 	.word	0x40013800
 800141c:	40020000 	.word	0x40020000
 8001420:	40020400 	.word	0x40020400
 8001424:	40020800 	.word	0x40020800
 8001428:	40020c00 	.word	0x40020c00
 800142c:	40021000 	.word	0x40021000
 8001430:	40021400 	.word	0x40021400
 8001434:	40021800 	.word	0x40021800
 8001438:	40013c00 	.word	0x40013c00

0800143c <__libc_init_array>:
 800143c:	b570      	push	{r4, r5, r6, lr}
 800143e:	4d0d      	ldr	r5, [pc, #52]	; (8001474 <__libc_init_array+0x38>)
 8001440:	4c0d      	ldr	r4, [pc, #52]	; (8001478 <__libc_init_array+0x3c>)
 8001442:	1b64      	subs	r4, r4, r5
 8001444:	10a4      	asrs	r4, r4, #2
 8001446:	2600      	movs	r6, #0
 8001448:	42a6      	cmp	r6, r4
 800144a:	d109      	bne.n	8001460 <__libc_init_array+0x24>
 800144c:	4d0b      	ldr	r5, [pc, #44]	; (800147c <__libc_init_array+0x40>)
 800144e:	4c0c      	ldr	r4, [pc, #48]	; (8001480 <__libc_init_array+0x44>)
 8001450:	f001 f864 	bl	800251c <_init>
 8001454:	1b64      	subs	r4, r4, r5
 8001456:	10a4      	asrs	r4, r4, #2
 8001458:	2600      	movs	r6, #0
 800145a:	42a6      	cmp	r6, r4
 800145c:	d105      	bne.n	800146a <__libc_init_array+0x2e>
 800145e:	bd70      	pop	{r4, r5, r6, pc}
 8001460:	f855 3b04 	ldr.w	r3, [r5], #4
 8001464:	4798      	blx	r3
 8001466:	3601      	adds	r6, #1
 8001468:	e7ee      	b.n	8001448 <__libc_init_array+0xc>
 800146a:	f855 3b04 	ldr.w	r3, [r5], #4
 800146e:	4798      	blx	r3
 8001470:	3601      	adds	r6, #1
 8001472:	e7f2      	b.n	800145a <__libc_init_array+0x1e>
 8001474:	08002710 	.word	0x08002710
 8001478:	08002710 	.word	0x08002710
 800147c:	08002710 	.word	0x08002710
 8001480:	08002714 	.word	0x08002714
 8001484:	00000000 	.word	0x00000000

08001488 <sin>:
 8001488:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800148a:	ec53 2b10 	vmov	r2, r3, d0
 800148e:	4828      	ldr	r0, [pc, #160]	; (8001530 <sin+0xa8>)
 8001490:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8001494:	4281      	cmp	r1, r0
 8001496:	dc07      	bgt.n	80014a8 <sin+0x20>
 8001498:	ed9f 1b23 	vldr	d1, [pc, #140]	; 8001528 <sin+0xa0>
 800149c:	2000      	movs	r0, #0
 800149e:	b005      	add	sp, #20
 80014a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80014a4:	f000 be6c 	b.w	8002180 <__kernel_sin>
 80014a8:	4822      	ldr	r0, [pc, #136]	; (8001534 <sin+0xac>)
 80014aa:	4281      	cmp	r1, r0
 80014ac:	dd09      	ble.n	80014c2 <sin+0x3a>
 80014ae:	ee10 0a10 	vmov	r0, s0
 80014b2:	4619      	mov	r1, r3
 80014b4:	f7fe feac 	bl	8000210 <__aeabi_dsub>
 80014b8:	ec41 0b10 	vmov	d0, r0, r1
 80014bc:	b005      	add	sp, #20
 80014be:	f85d fb04 	ldr.w	pc, [sp], #4
 80014c2:	4668      	mov	r0, sp
 80014c4:	f000 f838 	bl	8001538 <__ieee754_rem_pio2>
 80014c8:	f000 0003 	and.w	r0, r0, #3
 80014cc:	2801      	cmp	r0, #1
 80014ce:	d00c      	beq.n	80014ea <sin+0x62>
 80014d0:	2802      	cmp	r0, #2
 80014d2:	d011      	beq.n	80014f8 <sin+0x70>
 80014d4:	b9f0      	cbnz	r0, 8001514 <sin+0x8c>
 80014d6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80014da:	ed9d 0b00 	vldr	d0, [sp]
 80014de:	2001      	movs	r0, #1
 80014e0:	f000 fe4e 	bl	8002180 <__kernel_sin>
 80014e4:	ec51 0b10 	vmov	r0, r1, d0
 80014e8:	e7e6      	b.n	80014b8 <sin+0x30>
 80014ea:	ed9d 1b02 	vldr	d1, [sp, #8]
 80014ee:	ed9d 0b00 	vldr	d0, [sp]
 80014f2:	f000 fa2d 	bl	8001950 <__kernel_cos>
 80014f6:	e7f5      	b.n	80014e4 <sin+0x5c>
 80014f8:	ed9d 1b02 	vldr	d1, [sp, #8]
 80014fc:	ed9d 0b00 	vldr	d0, [sp]
 8001500:	2001      	movs	r0, #1
 8001502:	f000 fe3d 	bl	8002180 <__kernel_sin>
 8001506:	ec53 2b10 	vmov	r2, r3, d0
 800150a:	ee10 0a10 	vmov	r0, s0
 800150e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8001512:	e7d1      	b.n	80014b8 <sin+0x30>
 8001514:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001518:	ed9d 0b00 	vldr	d0, [sp]
 800151c:	f000 fa18 	bl	8001950 <__kernel_cos>
 8001520:	e7f1      	b.n	8001506 <sin+0x7e>
 8001522:	bf00      	nop
 8001524:	f3af 8000 	nop.w
	...
 8001530:	3fe921fb 	.word	0x3fe921fb
 8001534:	7fefffff 	.word	0x7fefffff

08001538 <__ieee754_rem_pio2>:
 8001538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800153c:	ed2d 8b02 	vpush	{d8}
 8001540:	ec55 4b10 	vmov	r4, r5, d0
 8001544:	4bca      	ldr	r3, [pc, #808]	; (8001870 <__ieee754_rem_pio2+0x338>)
 8001546:	b08b      	sub	sp, #44	; 0x2c
 8001548:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800154c:	4598      	cmp	r8, r3
 800154e:	4682      	mov	sl, r0
 8001550:	9502      	str	r5, [sp, #8]
 8001552:	dc08      	bgt.n	8001566 <__ieee754_rem_pio2+0x2e>
 8001554:	2200      	movs	r2, #0
 8001556:	2300      	movs	r3, #0
 8001558:	ed80 0b00 	vstr	d0, [r0]
 800155c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8001560:	f04f 0b00 	mov.w	fp, #0
 8001564:	e028      	b.n	80015b8 <__ieee754_rem_pio2+0x80>
 8001566:	4bc3      	ldr	r3, [pc, #780]	; (8001874 <__ieee754_rem_pio2+0x33c>)
 8001568:	4598      	cmp	r8, r3
 800156a:	dc78      	bgt.n	800165e <__ieee754_rem_pio2+0x126>
 800156c:	9b02      	ldr	r3, [sp, #8]
 800156e:	4ec2      	ldr	r6, [pc, #776]	; (8001878 <__ieee754_rem_pio2+0x340>)
 8001570:	2b00      	cmp	r3, #0
 8001572:	ee10 0a10 	vmov	r0, s0
 8001576:	a3b0      	add	r3, pc, #704	; (adr r3, 8001838 <__ieee754_rem_pio2+0x300>)
 8001578:	e9d3 2300 	ldrd	r2, r3, [r3]
 800157c:	4629      	mov	r1, r5
 800157e:	dd39      	ble.n	80015f4 <__ieee754_rem_pio2+0xbc>
 8001580:	f7fe fe46 	bl	8000210 <__aeabi_dsub>
 8001584:	45b0      	cmp	r8, r6
 8001586:	4604      	mov	r4, r0
 8001588:	460d      	mov	r5, r1
 800158a:	d01b      	beq.n	80015c4 <__ieee754_rem_pio2+0x8c>
 800158c:	a3ac      	add	r3, pc, #688	; (adr r3, 8001840 <__ieee754_rem_pio2+0x308>)
 800158e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001592:	f7fe fe3d 	bl	8000210 <__aeabi_dsub>
 8001596:	4602      	mov	r2, r0
 8001598:	460b      	mov	r3, r1
 800159a:	e9ca 2300 	strd	r2, r3, [sl]
 800159e:	4620      	mov	r0, r4
 80015a0:	4629      	mov	r1, r5
 80015a2:	f7fe fe35 	bl	8000210 <__aeabi_dsub>
 80015a6:	a3a6      	add	r3, pc, #664	; (adr r3, 8001840 <__ieee754_rem_pio2+0x308>)
 80015a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015ac:	f7fe fe30 	bl	8000210 <__aeabi_dsub>
 80015b0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80015b4:	f04f 0b01 	mov.w	fp, #1
 80015b8:	4658      	mov	r0, fp
 80015ba:	b00b      	add	sp, #44	; 0x2c
 80015bc:	ecbd 8b02 	vpop	{d8}
 80015c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015c4:	a3a0      	add	r3, pc, #640	; (adr r3, 8001848 <__ieee754_rem_pio2+0x310>)
 80015c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015ca:	f7fe fe21 	bl	8000210 <__aeabi_dsub>
 80015ce:	a3a0      	add	r3, pc, #640	; (adr r3, 8001850 <__ieee754_rem_pio2+0x318>)
 80015d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015d4:	4604      	mov	r4, r0
 80015d6:	460d      	mov	r5, r1
 80015d8:	f7fe fe1a 	bl	8000210 <__aeabi_dsub>
 80015dc:	4602      	mov	r2, r0
 80015de:	460b      	mov	r3, r1
 80015e0:	e9ca 2300 	strd	r2, r3, [sl]
 80015e4:	4620      	mov	r0, r4
 80015e6:	4629      	mov	r1, r5
 80015e8:	f7fe fe12 	bl	8000210 <__aeabi_dsub>
 80015ec:	a398      	add	r3, pc, #608	; (adr r3, 8001850 <__ieee754_rem_pio2+0x318>)
 80015ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015f2:	e7db      	b.n	80015ac <__ieee754_rem_pio2+0x74>
 80015f4:	f7fe fe0e 	bl	8000214 <__adddf3>
 80015f8:	45b0      	cmp	r8, r6
 80015fa:	4604      	mov	r4, r0
 80015fc:	460d      	mov	r5, r1
 80015fe:	d016      	beq.n	800162e <__ieee754_rem_pio2+0xf6>
 8001600:	a38f      	add	r3, pc, #572	; (adr r3, 8001840 <__ieee754_rem_pio2+0x308>)
 8001602:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001606:	f7fe fe05 	bl	8000214 <__adddf3>
 800160a:	4602      	mov	r2, r0
 800160c:	460b      	mov	r3, r1
 800160e:	e9ca 2300 	strd	r2, r3, [sl]
 8001612:	4620      	mov	r0, r4
 8001614:	4629      	mov	r1, r5
 8001616:	f7fe fdfb 	bl	8000210 <__aeabi_dsub>
 800161a:	a389      	add	r3, pc, #548	; (adr r3, 8001840 <__ieee754_rem_pio2+0x308>)
 800161c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001620:	f7fe fdf8 	bl	8000214 <__adddf3>
 8001624:	f04f 3bff 	mov.w	fp, #4294967295
 8001628:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800162c:	e7c4      	b.n	80015b8 <__ieee754_rem_pio2+0x80>
 800162e:	a386      	add	r3, pc, #536	; (adr r3, 8001848 <__ieee754_rem_pio2+0x310>)
 8001630:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001634:	f7fe fdee 	bl	8000214 <__adddf3>
 8001638:	a385      	add	r3, pc, #532	; (adr r3, 8001850 <__ieee754_rem_pio2+0x318>)
 800163a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800163e:	4604      	mov	r4, r0
 8001640:	460d      	mov	r5, r1
 8001642:	f7fe fde7 	bl	8000214 <__adddf3>
 8001646:	4602      	mov	r2, r0
 8001648:	460b      	mov	r3, r1
 800164a:	e9ca 2300 	strd	r2, r3, [sl]
 800164e:	4620      	mov	r0, r4
 8001650:	4629      	mov	r1, r5
 8001652:	f7fe fddd 	bl	8000210 <__aeabi_dsub>
 8001656:	a37e      	add	r3, pc, #504	; (adr r3, 8001850 <__ieee754_rem_pio2+0x318>)
 8001658:	e9d3 2300 	ldrd	r2, r3, [r3]
 800165c:	e7e0      	b.n	8001620 <__ieee754_rem_pio2+0xe8>
 800165e:	4b87      	ldr	r3, [pc, #540]	; (800187c <__ieee754_rem_pio2+0x344>)
 8001660:	4598      	cmp	r8, r3
 8001662:	f300 80d9 	bgt.w	8001818 <__ieee754_rem_pio2+0x2e0>
 8001666:	f000 fe49 	bl	80022fc <fabs>
 800166a:	ec55 4b10 	vmov	r4, r5, d0
 800166e:	ee10 0a10 	vmov	r0, s0
 8001672:	a379      	add	r3, pc, #484	; (adr r3, 8001858 <__ieee754_rem_pio2+0x320>)
 8001674:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001678:	4629      	mov	r1, r5
 800167a:	f7fe ff81 	bl	8000580 <__aeabi_dmul>
 800167e:	4b80      	ldr	r3, [pc, #512]	; (8001880 <__ieee754_rem_pio2+0x348>)
 8001680:	2200      	movs	r2, #0
 8001682:	f7fe fdc7 	bl	8000214 <__adddf3>
 8001686:	f7ff fa15 	bl	8000ab4 <__aeabi_d2iz>
 800168a:	4683      	mov	fp, r0
 800168c:	f7fe ff0e 	bl	80004ac <__aeabi_i2d>
 8001690:	4602      	mov	r2, r0
 8001692:	460b      	mov	r3, r1
 8001694:	ec43 2b18 	vmov	d8, r2, r3
 8001698:	a367      	add	r3, pc, #412	; (adr r3, 8001838 <__ieee754_rem_pio2+0x300>)
 800169a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800169e:	f7fe ff6f 	bl	8000580 <__aeabi_dmul>
 80016a2:	4602      	mov	r2, r0
 80016a4:	460b      	mov	r3, r1
 80016a6:	4620      	mov	r0, r4
 80016a8:	4629      	mov	r1, r5
 80016aa:	f7fe fdb1 	bl	8000210 <__aeabi_dsub>
 80016ae:	a364      	add	r3, pc, #400	; (adr r3, 8001840 <__ieee754_rem_pio2+0x308>)
 80016b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80016b4:	4606      	mov	r6, r0
 80016b6:	460f      	mov	r7, r1
 80016b8:	ec51 0b18 	vmov	r0, r1, d8
 80016bc:	f7fe ff60 	bl	8000580 <__aeabi_dmul>
 80016c0:	f1bb 0f1f 	cmp.w	fp, #31
 80016c4:	4604      	mov	r4, r0
 80016c6:	460d      	mov	r5, r1
 80016c8:	dc0d      	bgt.n	80016e6 <__ieee754_rem_pio2+0x1ae>
 80016ca:	4b6e      	ldr	r3, [pc, #440]	; (8001884 <__ieee754_rem_pio2+0x34c>)
 80016cc:	f10b 32ff 	add.w	r2, fp, #4294967295
 80016d0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80016d4:	4543      	cmp	r3, r8
 80016d6:	d006      	beq.n	80016e6 <__ieee754_rem_pio2+0x1ae>
 80016d8:	4622      	mov	r2, r4
 80016da:	462b      	mov	r3, r5
 80016dc:	4630      	mov	r0, r6
 80016de:	4639      	mov	r1, r7
 80016e0:	f7fe fd96 	bl	8000210 <__aeabi_dsub>
 80016e4:	e00f      	b.n	8001706 <__ieee754_rem_pio2+0x1ce>
 80016e6:	462b      	mov	r3, r5
 80016e8:	4622      	mov	r2, r4
 80016ea:	4630      	mov	r0, r6
 80016ec:	4639      	mov	r1, r7
 80016ee:	f7fe fd8f 	bl	8000210 <__aeabi_dsub>
 80016f2:	ea4f 5328 	mov.w	r3, r8, asr #20
 80016f6:	9303      	str	r3, [sp, #12]
 80016f8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80016fc:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8001700:	f1b8 0f10 	cmp.w	r8, #16
 8001704:	dc02      	bgt.n	800170c <__ieee754_rem_pio2+0x1d4>
 8001706:	e9ca 0100 	strd	r0, r1, [sl]
 800170a:	e039      	b.n	8001780 <__ieee754_rem_pio2+0x248>
 800170c:	a34e      	add	r3, pc, #312	; (adr r3, 8001848 <__ieee754_rem_pio2+0x310>)
 800170e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001712:	ec51 0b18 	vmov	r0, r1, d8
 8001716:	f7fe ff33 	bl	8000580 <__aeabi_dmul>
 800171a:	4604      	mov	r4, r0
 800171c:	460d      	mov	r5, r1
 800171e:	4602      	mov	r2, r0
 8001720:	460b      	mov	r3, r1
 8001722:	4630      	mov	r0, r6
 8001724:	4639      	mov	r1, r7
 8001726:	f7fe fd73 	bl	8000210 <__aeabi_dsub>
 800172a:	4602      	mov	r2, r0
 800172c:	460b      	mov	r3, r1
 800172e:	4680      	mov	r8, r0
 8001730:	4689      	mov	r9, r1
 8001732:	4630      	mov	r0, r6
 8001734:	4639      	mov	r1, r7
 8001736:	f7fe fd6b 	bl	8000210 <__aeabi_dsub>
 800173a:	4622      	mov	r2, r4
 800173c:	462b      	mov	r3, r5
 800173e:	f7fe fd67 	bl	8000210 <__aeabi_dsub>
 8001742:	a343      	add	r3, pc, #268	; (adr r3, 8001850 <__ieee754_rem_pio2+0x318>)
 8001744:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001748:	4604      	mov	r4, r0
 800174a:	460d      	mov	r5, r1
 800174c:	ec51 0b18 	vmov	r0, r1, d8
 8001750:	f7fe ff16 	bl	8000580 <__aeabi_dmul>
 8001754:	4622      	mov	r2, r4
 8001756:	462b      	mov	r3, r5
 8001758:	f7fe fd5a 	bl	8000210 <__aeabi_dsub>
 800175c:	4602      	mov	r2, r0
 800175e:	460b      	mov	r3, r1
 8001760:	4604      	mov	r4, r0
 8001762:	460d      	mov	r5, r1
 8001764:	4640      	mov	r0, r8
 8001766:	4649      	mov	r1, r9
 8001768:	f7fe fd52 	bl	8000210 <__aeabi_dsub>
 800176c:	9a03      	ldr	r2, [sp, #12]
 800176e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8001772:	1ad3      	subs	r3, r2, r3
 8001774:	2b31      	cmp	r3, #49	; 0x31
 8001776:	dc24      	bgt.n	80017c2 <__ieee754_rem_pio2+0x28a>
 8001778:	e9ca 0100 	strd	r0, r1, [sl]
 800177c:	4646      	mov	r6, r8
 800177e:	464f      	mov	r7, r9
 8001780:	e9da 8900 	ldrd	r8, r9, [sl]
 8001784:	4630      	mov	r0, r6
 8001786:	4642      	mov	r2, r8
 8001788:	464b      	mov	r3, r9
 800178a:	4639      	mov	r1, r7
 800178c:	f7fe fd40 	bl	8000210 <__aeabi_dsub>
 8001790:	462b      	mov	r3, r5
 8001792:	4622      	mov	r2, r4
 8001794:	f7fe fd3c 	bl	8000210 <__aeabi_dsub>
 8001798:	9b02      	ldr	r3, [sp, #8]
 800179a:	2b00      	cmp	r3, #0
 800179c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80017a0:	f6bf af0a 	bge.w	80015b8 <__ieee754_rem_pio2+0x80>
 80017a4:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80017a8:	f8ca 3004 	str.w	r3, [sl, #4]
 80017ac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80017b0:	f8ca 8000 	str.w	r8, [sl]
 80017b4:	f8ca 0008 	str.w	r0, [sl, #8]
 80017b8:	f8ca 300c 	str.w	r3, [sl, #12]
 80017bc:	f1cb 0b00 	rsb	fp, fp, #0
 80017c0:	e6fa      	b.n	80015b8 <__ieee754_rem_pio2+0x80>
 80017c2:	a327      	add	r3, pc, #156	; (adr r3, 8001860 <__ieee754_rem_pio2+0x328>)
 80017c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017c8:	ec51 0b18 	vmov	r0, r1, d8
 80017cc:	f7fe fed8 	bl	8000580 <__aeabi_dmul>
 80017d0:	4604      	mov	r4, r0
 80017d2:	460d      	mov	r5, r1
 80017d4:	4602      	mov	r2, r0
 80017d6:	460b      	mov	r3, r1
 80017d8:	4640      	mov	r0, r8
 80017da:	4649      	mov	r1, r9
 80017dc:	f7fe fd18 	bl	8000210 <__aeabi_dsub>
 80017e0:	4602      	mov	r2, r0
 80017e2:	460b      	mov	r3, r1
 80017e4:	4606      	mov	r6, r0
 80017e6:	460f      	mov	r7, r1
 80017e8:	4640      	mov	r0, r8
 80017ea:	4649      	mov	r1, r9
 80017ec:	f7fe fd10 	bl	8000210 <__aeabi_dsub>
 80017f0:	4622      	mov	r2, r4
 80017f2:	462b      	mov	r3, r5
 80017f4:	f7fe fd0c 	bl	8000210 <__aeabi_dsub>
 80017f8:	a31b      	add	r3, pc, #108	; (adr r3, 8001868 <__ieee754_rem_pio2+0x330>)
 80017fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017fe:	4604      	mov	r4, r0
 8001800:	460d      	mov	r5, r1
 8001802:	ec51 0b18 	vmov	r0, r1, d8
 8001806:	f7fe febb 	bl	8000580 <__aeabi_dmul>
 800180a:	4622      	mov	r2, r4
 800180c:	462b      	mov	r3, r5
 800180e:	f7fe fcff 	bl	8000210 <__aeabi_dsub>
 8001812:	4604      	mov	r4, r0
 8001814:	460d      	mov	r5, r1
 8001816:	e75f      	b.n	80016d8 <__ieee754_rem_pio2+0x1a0>
 8001818:	4b1b      	ldr	r3, [pc, #108]	; (8001888 <__ieee754_rem_pio2+0x350>)
 800181a:	4598      	cmp	r8, r3
 800181c:	dd36      	ble.n	800188c <__ieee754_rem_pio2+0x354>
 800181e:	ee10 2a10 	vmov	r2, s0
 8001822:	462b      	mov	r3, r5
 8001824:	4620      	mov	r0, r4
 8001826:	4629      	mov	r1, r5
 8001828:	f7fe fcf2 	bl	8000210 <__aeabi_dsub>
 800182c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8001830:	e9ca 0100 	strd	r0, r1, [sl]
 8001834:	e694      	b.n	8001560 <__ieee754_rem_pio2+0x28>
 8001836:	bf00      	nop
 8001838:	54400000 	.word	0x54400000
 800183c:	3ff921fb 	.word	0x3ff921fb
 8001840:	1a626331 	.word	0x1a626331
 8001844:	3dd0b461 	.word	0x3dd0b461
 8001848:	1a600000 	.word	0x1a600000
 800184c:	3dd0b461 	.word	0x3dd0b461
 8001850:	2e037073 	.word	0x2e037073
 8001854:	3ba3198a 	.word	0x3ba3198a
 8001858:	6dc9c883 	.word	0x6dc9c883
 800185c:	3fe45f30 	.word	0x3fe45f30
 8001860:	2e000000 	.word	0x2e000000
 8001864:	3ba3198a 	.word	0x3ba3198a
 8001868:	252049c1 	.word	0x252049c1
 800186c:	397b839a 	.word	0x397b839a
 8001870:	3fe921fb 	.word	0x3fe921fb
 8001874:	4002d97b 	.word	0x4002d97b
 8001878:	3ff921fb 	.word	0x3ff921fb
 800187c:	413921fb 	.word	0x413921fb
 8001880:	3fe00000 	.word	0x3fe00000
 8001884:	08002538 	.word	0x08002538
 8001888:	7fefffff 	.word	0x7fefffff
 800188c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8001890:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8001894:	ee10 0a10 	vmov	r0, s0
 8001898:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800189c:	ee10 6a10 	vmov	r6, s0
 80018a0:	460f      	mov	r7, r1
 80018a2:	f7ff f907 	bl	8000ab4 <__aeabi_d2iz>
 80018a6:	f7fe fe01 	bl	80004ac <__aeabi_i2d>
 80018aa:	4602      	mov	r2, r0
 80018ac:	460b      	mov	r3, r1
 80018ae:	4630      	mov	r0, r6
 80018b0:	4639      	mov	r1, r7
 80018b2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80018b6:	f7fe fcab 	bl	8000210 <__aeabi_dsub>
 80018ba:	4b23      	ldr	r3, [pc, #140]	; (8001948 <__ieee754_rem_pio2+0x410>)
 80018bc:	2200      	movs	r2, #0
 80018be:	f7fe fe5f 	bl	8000580 <__aeabi_dmul>
 80018c2:	460f      	mov	r7, r1
 80018c4:	4606      	mov	r6, r0
 80018c6:	f7ff f8f5 	bl	8000ab4 <__aeabi_d2iz>
 80018ca:	f7fe fdef 	bl	80004ac <__aeabi_i2d>
 80018ce:	4602      	mov	r2, r0
 80018d0:	460b      	mov	r3, r1
 80018d2:	4630      	mov	r0, r6
 80018d4:	4639      	mov	r1, r7
 80018d6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80018da:	f7fe fc99 	bl	8000210 <__aeabi_dsub>
 80018de:	4b1a      	ldr	r3, [pc, #104]	; (8001948 <__ieee754_rem_pio2+0x410>)
 80018e0:	2200      	movs	r2, #0
 80018e2:	f7fe fe4d 	bl	8000580 <__aeabi_dmul>
 80018e6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80018ea:	ad04      	add	r5, sp, #16
 80018ec:	f04f 0803 	mov.w	r8, #3
 80018f0:	46a9      	mov	r9, r5
 80018f2:	2600      	movs	r6, #0
 80018f4:	2700      	movs	r7, #0
 80018f6:	4632      	mov	r2, r6
 80018f8:	463b      	mov	r3, r7
 80018fa:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 80018fe:	46c3      	mov	fp, r8
 8001900:	3d08      	subs	r5, #8
 8001902:	f108 38ff 	add.w	r8, r8, #4294967295
 8001906:	f7ff f8a3 	bl	8000a50 <__aeabi_dcmpeq>
 800190a:	2800      	cmp	r0, #0
 800190c:	d1f3      	bne.n	80018f6 <__ieee754_rem_pio2+0x3be>
 800190e:	4b0f      	ldr	r3, [pc, #60]	; (800194c <__ieee754_rem_pio2+0x414>)
 8001910:	9301      	str	r3, [sp, #4]
 8001912:	2302      	movs	r3, #2
 8001914:	9300      	str	r3, [sp, #0]
 8001916:	4622      	mov	r2, r4
 8001918:	465b      	mov	r3, fp
 800191a:	4651      	mov	r1, sl
 800191c:	4648      	mov	r0, r9
 800191e:	f000 f8df 	bl	8001ae0 <__kernel_rem_pio2>
 8001922:	9b02      	ldr	r3, [sp, #8]
 8001924:	2b00      	cmp	r3, #0
 8001926:	4683      	mov	fp, r0
 8001928:	f6bf ae46 	bge.w	80015b8 <__ieee754_rem_pio2+0x80>
 800192c:	e9da 2100 	ldrd	r2, r1, [sl]
 8001930:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8001934:	e9ca 2300 	strd	r2, r3, [sl]
 8001938:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 800193c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8001940:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8001944:	e73a      	b.n	80017bc <__ieee754_rem_pio2+0x284>
 8001946:	bf00      	nop
 8001948:	41700000 	.word	0x41700000
 800194c:	080025b8 	.word	0x080025b8

08001950 <__kernel_cos>:
 8001950:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001954:	ec57 6b10 	vmov	r6, r7, d0
 8001958:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 800195c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8001960:	ed8d 1b00 	vstr	d1, [sp]
 8001964:	da07      	bge.n	8001976 <__kernel_cos+0x26>
 8001966:	ee10 0a10 	vmov	r0, s0
 800196a:	4639      	mov	r1, r7
 800196c:	f7ff f8a2 	bl	8000ab4 <__aeabi_d2iz>
 8001970:	2800      	cmp	r0, #0
 8001972:	f000 8088 	beq.w	8001a86 <__kernel_cos+0x136>
 8001976:	4632      	mov	r2, r6
 8001978:	463b      	mov	r3, r7
 800197a:	4630      	mov	r0, r6
 800197c:	4639      	mov	r1, r7
 800197e:	f7fe fdff 	bl	8000580 <__aeabi_dmul>
 8001982:	4b51      	ldr	r3, [pc, #324]	; (8001ac8 <__kernel_cos+0x178>)
 8001984:	2200      	movs	r2, #0
 8001986:	4604      	mov	r4, r0
 8001988:	460d      	mov	r5, r1
 800198a:	f7fe fdf9 	bl	8000580 <__aeabi_dmul>
 800198e:	a340      	add	r3, pc, #256	; (adr r3, 8001a90 <__kernel_cos+0x140>)
 8001990:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001994:	4682      	mov	sl, r0
 8001996:	468b      	mov	fp, r1
 8001998:	4620      	mov	r0, r4
 800199a:	4629      	mov	r1, r5
 800199c:	f7fe fdf0 	bl	8000580 <__aeabi_dmul>
 80019a0:	a33d      	add	r3, pc, #244	; (adr r3, 8001a98 <__kernel_cos+0x148>)
 80019a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019a6:	f7fe fc35 	bl	8000214 <__adddf3>
 80019aa:	4622      	mov	r2, r4
 80019ac:	462b      	mov	r3, r5
 80019ae:	f7fe fde7 	bl	8000580 <__aeabi_dmul>
 80019b2:	a33b      	add	r3, pc, #236	; (adr r3, 8001aa0 <__kernel_cos+0x150>)
 80019b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019b8:	f7fe fc2a 	bl	8000210 <__aeabi_dsub>
 80019bc:	4622      	mov	r2, r4
 80019be:	462b      	mov	r3, r5
 80019c0:	f7fe fdde 	bl	8000580 <__aeabi_dmul>
 80019c4:	a338      	add	r3, pc, #224	; (adr r3, 8001aa8 <__kernel_cos+0x158>)
 80019c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019ca:	f7fe fc23 	bl	8000214 <__adddf3>
 80019ce:	4622      	mov	r2, r4
 80019d0:	462b      	mov	r3, r5
 80019d2:	f7fe fdd5 	bl	8000580 <__aeabi_dmul>
 80019d6:	a336      	add	r3, pc, #216	; (adr r3, 8001ab0 <__kernel_cos+0x160>)
 80019d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019dc:	f7fe fc18 	bl	8000210 <__aeabi_dsub>
 80019e0:	4622      	mov	r2, r4
 80019e2:	462b      	mov	r3, r5
 80019e4:	f7fe fdcc 	bl	8000580 <__aeabi_dmul>
 80019e8:	a333      	add	r3, pc, #204	; (adr r3, 8001ab8 <__kernel_cos+0x168>)
 80019ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019ee:	f7fe fc11 	bl	8000214 <__adddf3>
 80019f2:	4622      	mov	r2, r4
 80019f4:	462b      	mov	r3, r5
 80019f6:	f7fe fdc3 	bl	8000580 <__aeabi_dmul>
 80019fa:	4622      	mov	r2, r4
 80019fc:	462b      	mov	r3, r5
 80019fe:	f7fe fdbf 	bl	8000580 <__aeabi_dmul>
 8001a02:	e9dd 2300 	ldrd	r2, r3, [sp]
 8001a06:	4604      	mov	r4, r0
 8001a08:	460d      	mov	r5, r1
 8001a0a:	4630      	mov	r0, r6
 8001a0c:	4639      	mov	r1, r7
 8001a0e:	f7fe fdb7 	bl	8000580 <__aeabi_dmul>
 8001a12:	460b      	mov	r3, r1
 8001a14:	4602      	mov	r2, r0
 8001a16:	4629      	mov	r1, r5
 8001a18:	4620      	mov	r0, r4
 8001a1a:	f7fe fbf9 	bl	8000210 <__aeabi_dsub>
 8001a1e:	4b2b      	ldr	r3, [pc, #172]	; (8001acc <__kernel_cos+0x17c>)
 8001a20:	4598      	cmp	r8, r3
 8001a22:	4606      	mov	r6, r0
 8001a24:	460f      	mov	r7, r1
 8001a26:	dc10      	bgt.n	8001a4a <__kernel_cos+0xfa>
 8001a28:	4602      	mov	r2, r0
 8001a2a:	460b      	mov	r3, r1
 8001a2c:	4650      	mov	r0, sl
 8001a2e:	4659      	mov	r1, fp
 8001a30:	f7fe fbee 	bl	8000210 <__aeabi_dsub>
 8001a34:	460b      	mov	r3, r1
 8001a36:	4926      	ldr	r1, [pc, #152]	; (8001ad0 <__kernel_cos+0x180>)
 8001a38:	4602      	mov	r2, r0
 8001a3a:	2000      	movs	r0, #0
 8001a3c:	f7fe fbe8 	bl	8000210 <__aeabi_dsub>
 8001a40:	ec41 0b10 	vmov	d0, r0, r1
 8001a44:	b003      	add	sp, #12
 8001a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a4a:	4b22      	ldr	r3, [pc, #136]	; (8001ad4 <__kernel_cos+0x184>)
 8001a4c:	4920      	ldr	r1, [pc, #128]	; (8001ad0 <__kernel_cos+0x180>)
 8001a4e:	4598      	cmp	r8, r3
 8001a50:	bfcc      	ite	gt
 8001a52:	4d21      	ldrgt	r5, [pc, #132]	; (8001ad8 <__kernel_cos+0x188>)
 8001a54:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8001a58:	2400      	movs	r4, #0
 8001a5a:	4622      	mov	r2, r4
 8001a5c:	462b      	mov	r3, r5
 8001a5e:	2000      	movs	r0, #0
 8001a60:	f7fe fbd6 	bl	8000210 <__aeabi_dsub>
 8001a64:	4622      	mov	r2, r4
 8001a66:	4680      	mov	r8, r0
 8001a68:	4689      	mov	r9, r1
 8001a6a:	462b      	mov	r3, r5
 8001a6c:	4650      	mov	r0, sl
 8001a6e:	4659      	mov	r1, fp
 8001a70:	f7fe fbce 	bl	8000210 <__aeabi_dsub>
 8001a74:	4632      	mov	r2, r6
 8001a76:	463b      	mov	r3, r7
 8001a78:	f7fe fbca 	bl	8000210 <__aeabi_dsub>
 8001a7c:	4602      	mov	r2, r0
 8001a7e:	460b      	mov	r3, r1
 8001a80:	4640      	mov	r0, r8
 8001a82:	4649      	mov	r1, r9
 8001a84:	e7da      	b.n	8001a3c <__kernel_cos+0xec>
 8001a86:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8001ac0 <__kernel_cos+0x170>
 8001a8a:	e7db      	b.n	8001a44 <__kernel_cos+0xf4>
 8001a8c:	f3af 8000 	nop.w
 8001a90:	be8838d4 	.word	0xbe8838d4
 8001a94:	bda8fae9 	.word	0xbda8fae9
 8001a98:	bdb4b1c4 	.word	0xbdb4b1c4
 8001a9c:	3e21ee9e 	.word	0x3e21ee9e
 8001aa0:	809c52ad 	.word	0x809c52ad
 8001aa4:	3e927e4f 	.word	0x3e927e4f
 8001aa8:	19cb1590 	.word	0x19cb1590
 8001aac:	3efa01a0 	.word	0x3efa01a0
 8001ab0:	16c15177 	.word	0x16c15177
 8001ab4:	3f56c16c 	.word	0x3f56c16c
 8001ab8:	5555554c 	.word	0x5555554c
 8001abc:	3fa55555 	.word	0x3fa55555
 8001ac0:	00000000 	.word	0x00000000
 8001ac4:	3ff00000 	.word	0x3ff00000
 8001ac8:	3fe00000 	.word	0x3fe00000
 8001acc:	3fd33332 	.word	0x3fd33332
 8001ad0:	3ff00000 	.word	0x3ff00000
 8001ad4:	3fe90000 	.word	0x3fe90000
 8001ad8:	3fd20000 	.word	0x3fd20000
 8001adc:	00000000 	.word	0x00000000

08001ae0 <__kernel_rem_pio2>:
 8001ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ae4:	ed2d 8b02 	vpush	{d8}
 8001ae8:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8001aec:	f112 0f14 	cmn.w	r2, #20
 8001af0:	9308      	str	r3, [sp, #32]
 8001af2:	9101      	str	r1, [sp, #4]
 8001af4:	4bc4      	ldr	r3, [pc, #784]	; (8001e08 <__kernel_rem_pio2+0x328>)
 8001af6:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8001af8:	900b      	str	r0, [sp, #44]	; 0x2c
 8001afa:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8001afe:	9302      	str	r3, [sp, #8]
 8001b00:	9b08      	ldr	r3, [sp, #32]
 8001b02:	f103 33ff 	add.w	r3, r3, #4294967295
 8001b06:	bfa8      	it	ge
 8001b08:	1ed4      	subge	r4, r2, #3
 8001b0a:	9306      	str	r3, [sp, #24]
 8001b0c:	bfb2      	itee	lt
 8001b0e:	2400      	movlt	r4, #0
 8001b10:	2318      	movge	r3, #24
 8001b12:	fb94 f4f3 	sdivge	r4, r4, r3
 8001b16:	f06f 0317 	mvn.w	r3, #23
 8001b1a:	fb04 3303 	mla	r3, r4, r3, r3
 8001b1e:	eb03 0a02 	add.w	sl, r3, r2
 8001b22:	9b02      	ldr	r3, [sp, #8]
 8001b24:	9a06      	ldr	r2, [sp, #24]
 8001b26:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8001df8 <__kernel_rem_pio2+0x318>
 8001b2a:	eb03 0802 	add.w	r8, r3, r2
 8001b2e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8001b30:	1aa7      	subs	r7, r4, r2
 8001b32:	ae22      	add	r6, sp, #136	; 0x88
 8001b34:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8001b38:	2500      	movs	r5, #0
 8001b3a:	4545      	cmp	r5, r8
 8001b3c:	dd13      	ble.n	8001b66 <__kernel_rem_pio2+0x86>
 8001b3e:	9b08      	ldr	r3, [sp, #32]
 8001b40:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8001df8 <__kernel_rem_pio2+0x318>
 8001b44:	aa22      	add	r2, sp, #136	; 0x88
 8001b46:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8001b4a:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8001b4e:	f04f 0800 	mov.w	r8, #0
 8001b52:	9b02      	ldr	r3, [sp, #8]
 8001b54:	4598      	cmp	r8, r3
 8001b56:	dc2f      	bgt.n	8001bb8 <__kernel_rem_pio2+0xd8>
 8001b58:	ed8d 8b04 	vstr	d8, [sp, #16]
 8001b5c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8001b60:	462f      	mov	r7, r5
 8001b62:	2600      	movs	r6, #0
 8001b64:	e01b      	b.n	8001b9e <__kernel_rem_pio2+0xbe>
 8001b66:	42ef      	cmn	r7, r5
 8001b68:	d407      	bmi.n	8001b7a <__kernel_rem_pio2+0x9a>
 8001b6a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8001b6e:	f7fe fc9d 	bl	80004ac <__aeabi_i2d>
 8001b72:	e8e6 0102 	strd	r0, r1, [r6], #8
 8001b76:	3501      	adds	r5, #1
 8001b78:	e7df      	b.n	8001b3a <__kernel_rem_pio2+0x5a>
 8001b7a:	ec51 0b18 	vmov	r0, r1, d8
 8001b7e:	e7f8      	b.n	8001b72 <__kernel_rem_pio2+0x92>
 8001b80:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001b84:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8001b88:	f7fe fcfa 	bl	8000580 <__aeabi_dmul>
 8001b8c:	4602      	mov	r2, r0
 8001b8e:	460b      	mov	r3, r1
 8001b90:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8001b94:	f7fe fb3e 	bl	8000214 <__adddf3>
 8001b98:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8001b9c:	3601      	adds	r6, #1
 8001b9e:	9b06      	ldr	r3, [sp, #24]
 8001ba0:	429e      	cmp	r6, r3
 8001ba2:	f1a7 0708 	sub.w	r7, r7, #8
 8001ba6:	ddeb      	ble.n	8001b80 <__kernel_rem_pio2+0xa0>
 8001ba8:	ed9d 7b04 	vldr	d7, [sp, #16]
 8001bac:	f108 0801 	add.w	r8, r8, #1
 8001bb0:	ecab 7b02 	vstmia	fp!, {d7}
 8001bb4:	3508      	adds	r5, #8
 8001bb6:	e7cc      	b.n	8001b52 <__kernel_rem_pio2+0x72>
 8001bb8:	9b02      	ldr	r3, [sp, #8]
 8001bba:	aa0e      	add	r2, sp, #56	; 0x38
 8001bbc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8001bc0:	930d      	str	r3, [sp, #52]	; 0x34
 8001bc2:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8001bc4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8001bc8:	9c02      	ldr	r4, [sp, #8]
 8001bca:	930c      	str	r3, [sp, #48]	; 0x30
 8001bcc:	00e3      	lsls	r3, r4, #3
 8001bce:	930a      	str	r3, [sp, #40]	; 0x28
 8001bd0:	ab9a      	add	r3, sp, #616	; 0x268
 8001bd2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8001bd6:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8001bda:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8001bde:	ab72      	add	r3, sp, #456	; 0x1c8
 8001be0:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8001be4:	46c3      	mov	fp, r8
 8001be6:	46a1      	mov	r9, r4
 8001be8:	f1b9 0f00 	cmp.w	r9, #0
 8001bec:	f1a5 0508 	sub.w	r5, r5, #8
 8001bf0:	dc77      	bgt.n	8001ce2 <__kernel_rem_pio2+0x202>
 8001bf2:	ec47 6b10 	vmov	d0, r6, r7
 8001bf6:	4650      	mov	r0, sl
 8001bf8:	f000 fc0a 	bl	8002410 <scalbn>
 8001bfc:	ec57 6b10 	vmov	r6, r7, d0
 8001c00:	2200      	movs	r2, #0
 8001c02:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8001c06:	ee10 0a10 	vmov	r0, s0
 8001c0a:	4639      	mov	r1, r7
 8001c0c:	f7fe fcb8 	bl	8000580 <__aeabi_dmul>
 8001c10:	ec41 0b10 	vmov	d0, r0, r1
 8001c14:	f000 fb7c 	bl	8002310 <floor>
 8001c18:	4b7c      	ldr	r3, [pc, #496]	; (8001e0c <__kernel_rem_pio2+0x32c>)
 8001c1a:	ec51 0b10 	vmov	r0, r1, d0
 8001c1e:	2200      	movs	r2, #0
 8001c20:	f7fe fcae 	bl	8000580 <__aeabi_dmul>
 8001c24:	4602      	mov	r2, r0
 8001c26:	460b      	mov	r3, r1
 8001c28:	4630      	mov	r0, r6
 8001c2a:	4639      	mov	r1, r7
 8001c2c:	f7fe faf0 	bl	8000210 <__aeabi_dsub>
 8001c30:	460f      	mov	r7, r1
 8001c32:	4606      	mov	r6, r0
 8001c34:	f7fe ff3e 	bl	8000ab4 <__aeabi_d2iz>
 8001c38:	9004      	str	r0, [sp, #16]
 8001c3a:	f7fe fc37 	bl	80004ac <__aeabi_i2d>
 8001c3e:	4602      	mov	r2, r0
 8001c40:	460b      	mov	r3, r1
 8001c42:	4630      	mov	r0, r6
 8001c44:	4639      	mov	r1, r7
 8001c46:	f7fe fae3 	bl	8000210 <__aeabi_dsub>
 8001c4a:	f1ba 0f00 	cmp.w	sl, #0
 8001c4e:	4606      	mov	r6, r0
 8001c50:	460f      	mov	r7, r1
 8001c52:	dd6d      	ble.n	8001d30 <__kernel_rem_pio2+0x250>
 8001c54:	1e62      	subs	r2, r4, #1
 8001c56:	ab0e      	add	r3, sp, #56	; 0x38
 8001c58:	9d04      	ldr	r5, [sp, #16]
 8001c5a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8001c5e:	f1ca 0118 	rsb	r1, sl, #24
 8001c62:	fa40 f301 	asr.w	r3, r0, r1
 8001c66:	441d      	add	r5, r3
 8001c68:	408b      	lsls	r3, r1
 8001c6a:	1ac0      	subs	r0, r0, r3
 8001c6c:	ab0e      	add	r3, sp, #56	; 0x38
 8001c6e:	9504      	str	r5, [sp, #16]
 8001c70:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8001c74:	f1ca 0317 	rsb	r3, sl, #23
 8001c78:	fa40 fb03 	asr.w	fp, r0, r3
 8001c7c:	f1bb 0f00 	cmp.w	fp, #0
 8001c80:	dd65      	ble.n	8001d4e <__kernel_rem_pio2+0x26e>
 8001c82:	9b04      	ldr	r3, [sp, #16]
 8001c84:	2200      	movs	r2, #0
 8001c86:	3301      	adds	r3, #1
 8001c88:	9304      	str	r3, [sp, #16]
 8001c8a:	4615      	mov	r5, r2
 8001c8c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8001c90:	4294      	cmp	r4, r2
 8001c92:	f300 809c 	bgt.w	8001dce <__kernel_rem_pio2+0x2ee>
 8001c96:	f1ba 0f00 	cmp.w	sl, #0
 8001c9a:	dd07      	ble.n	8001cac <__kernel_rem_pio2+0x1cc>
 8001c9c:	f1ba 0f01 	cmp.w	sl, #1
 8001ca0:	f000 80c0 	beq.w	8001e24 <__kernel_rem_pio2+0x344>
 8001ca4:	f1ba 0f02 	cmp.w	sl, #2
 8001ca8:	f000 80c6 	beq.w	8001e38 <__kernel_rem_pio2+0x358>
 8001cac:	f1bb 0f02 	cmp.w	fp, #2
 8001cb0:	d14d      	bne.n	8001d4e <__kernel_rem_pio2+0x26e>
 8001cb2:	4632      	mov	r2, r6
 8001cb4:	463b      	mov	r3, r7
 8001cb6:	4956      	ldr	r1, [pc, #344]	; (8001e10 <__kernel_rem_pio2+0x330>)
 8001cb8:	2000      	movs	r0, #0
 8001cba:	f7fe faa9 	bl	8000210 <__aeabi_dsub>
 8001cbe:	4606      	mov	r6, r0
 8001cc0:	460f      	mov	r7, r1
 8001cc2:	2d00      	cmp	r5, #0
 8001cc4:	d043      	beq.n	8001d4e <__kernel_rem_pio2+0x26e>
 8001cc6:	4650      	mov	r0, sl
 8001cc8:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8001e00 <__kernel_rem_pio2+0x320>
 8001ccc:	f000 fba0 	bl	8002410 <scalbn>
 8001cd0:	4630      	mov	r0, r6
 8001cd2:	4639      	mov	r1, r7
 8001cd4:	ec53 2b10 	vmov	r2, r3, d0
 8001cd8:	f7fe fa9a 	bl	8000210 <__aeabi_dsub>
 8001cdc:	4606      	mov	r6, r0
 8001cde:	460f      	mov	r7, r1
 8001ce0:	e035      	b.n	8001d4e <__kernel_rem_pio2+0x26e>
 8001ce2:	4b4c      	ldr	r3, [pc, #304]	; (8001e14 <__kernel_rem_pio2+0x334>)
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	4630      	mov	r0, r6
 8001ce8:	4639      	mov	r1, r7
 8001cea:	f7fe fc49 	bl	8000580 <__aeabi_dmul>
 8001cee:	f7fe fee1 	bl	8000ab4 <__aeabi_d2iz>
 8001cf2:	f7fe fbdb 	bl	80004ac <__aeabi_i2d>
 8001cf6:	4602      	mov	r2, r0
 8001cf8:	460b      	mov	r3, r1
 8001cfa:	ec43 2b18 	vmov	d8, r2, r3
 8001cfe:	4b46      	ldr	r3, [pc, #280]	; (8001e18 <__kernel_rem_pio2+0x338>)
 8001d00:	2200      	movs	r2, #0
 8001d02:	f7fe fc3d 	bl	8000580 <__aeabi_dmul>
 8001d06:	4602      	mov	r2, r0
 8001d08:	460b      	mov	r3, r1
 8001d0a:	4630      	mov	r0, r6
 8001d0c:	4639      	mov	r1, r7
 8001d0e:	f7fe fa7f 	bl	8000210 <__aeabi_dsub>
 8001d12:	f7fe fecf 	bl	8000ab4 <__aeabi_d2iz>
 8001d16:	e9d5 2300 	ldrd	r2, r3, [r5]
 8001d1a:	f84b 0b04 	str.w	r0, [fp], #4
 8001d1e:	ec51 0b18 	vmov	r0, r1, d8
 8001d22:	f7fe fa77 	bl	8000214 <__adddf3>
 8001d26:	f109 39ff 	add.w	r9, r9, #4294967295
 8001d2a:	4606      	mov	r6, r0
 8001d2c:	460f      	mov	r7, r1
 8001d2e:	e75b      	b.n	8001be8 <__kernel_rem_pio2+0x108>
 8001d30:	d106      	bne.n	8001d40 <__kernel_rem_pio2+0x260>
 8001d32:	1e63      	subs	r3, r4, #1
 8001d34:	aa0e      	add	r2, sp, #56	; 0x38
 8001d36:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8001d3a:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8001d3e:	e79d      	b.n	8001c7c <__kernel_rem_pio2+0x19c>
 8001d40:	4b36      	ldr	r3, [pc, #216]	; (8001e1c <__kernel_rem_pio2+0x33c>)
 8001d42:	2200      	movs	r2, #0
 8001d44:	f7fe fea2 	bl	8000a8c <__aeabi_dcmpge>
 8001d48:	2800      	cmp	r0, #0
 8001d4a:	d13d      	bne.n	8001dc8 <__kernel_rem_pio2+0x2e8>
 8001d4c:	4683      	mov	fp, r0
 8001d4e:	2200      	movs	r2, #0
 8001d50:	2300      	movs	r3, #0
 8001d52:	4630      	mov	r0, r6
 8001d54:	4639      	mov	r1, r7
 8001d56:	f7fe fe7b 	bl	8000a50 <__aeabi_dcmpeq>
 8001d5a:	2800      	cmp	r0, #0
 8001d5c:	f000 80c0 	beq.w	8001ee0 <__kernel_rem_pio2+0x400>
 8001d60:	1e65      	subs	r5, r4, #1
 8001d62:	462b      	mov	r3, r5
 8001d64:	2200      	movs	r2, #0
 8001d66:	9902      	ldr	r1, [sp, #8]
 8001d68:	428b      	cmp	r3, r1
 8001d6a:	da6c      	bge.n	8001e46 <__kernel_rem_pio2+0x366>
 8001d6c:	2a00      	cmp	r2, #0
 8001d6e:	f000 8089 	beq.w	8001e84 <__kernel_rem_pio2+0x3a4>
 8001d72:	ab0e      	add	r3, sp, #56	; 0x38
 8001d74:	f1aa 0a18 	sub.w	sl, sl, #24
 8001d78:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8001d7c:	2b00      	cmp	r3, #0
 8001d7e:	f000 80ad 	beq.w	8001edc <__kernel_rem_pio2+0x3fc>
 8001d82:	4650      	mov	r0, sl
 8001d84:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8001e00 <__kernel_rem_pio2+0x320>
 8001d88:	f000 fb42 	bl	8002410 <scalbn>
 8001d8c:	ab9a      	add	r3, sp, #616	; 0x268
 8001d8e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8001d92:	ec57 6b10 	vmov	r6, r7, d0
 8001d96:	00ec      	lsls	r4, r5, #3
 8001d98:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 8001d9c:	46aa      	mov	sl, r5
 8001d9e:	f1ba 0f00 	cmp.w	sl, #0
 8001da2:	f280 80d6 	bge.w	8001f52 <__kernel_rem_pio2+0x472>
 8001da6:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8001df8 <__kernel_rem_pio2+0x318>
 8001daa:	462e      	mov	r6, r5
 8001dac:	2e00      	cmp	r6, #0
 8001dae:	f2c0 8104 	blt.w	8001fba <__kernel_rem_pio2+0x4da>
 8001db2:	ab72      	add	r3, sp, #456	; 0x1c8
 8001db4:	ed8d 8b06 	vstr	d8, [sp, #24]
 8001db8:	f8df a064 	ldr.w	sl, [pc, #100]	; 8001e20 <__kernel_rem_pio2+0x340>
 8001dbc:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8001dc0:	f04f 0800 	mov.w	r8, #0
 8001dc4:	1baf      	subs	r7, r5, r6
 8001dc6:	e0ea      	b.n	8001f9e <__kernel_rem_pio2+0x4be>
 8001dc8:	f04f 0b02 	mov.w	fp, #2
 8001dcc:	e759      	b.n	8001c82 <__kernel_rem_pio2+0x1a2>
 8001dce:	f8d8 3000 	ldr.w	r3, [r8]
 8001dd2:	b955      	cbnz	r5, 8001dea <__kernel_rem_pio2+0x30a>
 8001dd4:	b123      	cbz	r3, 8001de0 <__kernel_rem_pio2+0x300>
 8001dd6:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8001dda:	f8c8 3000 	str.w	r3, [r8]
 8001dde:	2301      	movs	r3, #1
 8001de0:	3201      	adds	r2, #1
 8001de2:	f108 0804 	add.w	r8, r8, #4
 8001de6:	461d      	mov	r5, r3
 8001de8:	e752      	b.n	8001c90 <__kernel_rem_pio2+0x1b0>
 8001dea:	1acb      	subs	r3, r1, r3
 8001dec:	f8c8 3000 	str.w	r3, [r8]
 8001df0:	462b      	mov	r3, r5
 8001df2:	e7f5      	b.n	8001de0 <__kernel_rem_pio2+0x300>
 8001df4:	f3af 8000 	nop.w
	...
 8001e04:	3ff00000 	.word	0x3ff00000
 8001e08:	08002700 	.word	0x08002700
 8001e0c:	40200000 	.word	0x40200000
 8001e10:	3ff00000 	.word	0x3ff00000
 8001e14:	3e700000 	.word	0x3e700000
 8001e18:	41700000 	.word	0x41700000
 8001e1c:	3fe00000 	.word	0x3fe00000
 8001e20:	080026c0 	.word	0x080026c0
 8001e24:	1e62      	subs	r2, r4, #1
 8001e26:	ab0e      	add	r3, sp, #56	; 0x38
 8001e28:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e2c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8001e30:	a90e      	add	r1, sp, #56	; 0x38
 8001e32:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8001e36:	e739      	b.n	8001cac <__kernel_rem_pio2+0x1cc>
 8001e38:	1e62      	subs	r2, r4, #1
 8001e3a:	ab0e      	add	r3, sp, #56	; 0x38
 8001e3c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e40:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8001e44:	e7f4      	b.n	8001e30 <__kernel_rem_pio2+0x350>
 8001e46:	a90e      	add	r1, sp, #56	; 0x38
 8001e48:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8001e4c:	3b01      	subs	r3, #1
 8001e4e:	430a      	orrs	r2, r1
 8001e50:	e789      	b.n	8001d66 <__kernel_rem_pio2+0x286>
 8001e52:	3301      	adds	r3, #1
 8001e54:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8001e58:	2900      	cmp	r1, #0
 8001e5a:	d0fa      	beq.n	8001e52 <__kernel_rem_pio2+0x372>
 8001e5c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001e5e:	f502 721a 	add.w	r2, r2, #616	; 0x268
 8001e62:	446a      	add	r2, sp
 8001e64:	3a98      	subs	r2, #152	; 0x98
 8001e66:	920a      	str	r2, [sp, #40]	; 0x28
 8001e68:	9a08      	ldr	r2, [sp, #32]
 8001e6a:	18e3      	adds	r3, r4, r3
 8001e6c:	18a5      	adds	r5, r4, r2
 8001e6e:	aa22      	add	r2, sp, #136	; 0x88
 8001e70:	f104 0801 	add.w	r8, r4, #1
 8001e74:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8001e78:	9304      	str	r3, [sp, #16]
 8001e7a:	9b04      	ldr	r3, [sp, #16]
 8001e7c:	4543      	cmp	r3, r8
 8001e7e:	da04      	bge.n	8001e8a <__kernel_rem_pio2+0x3aa>
 8001e80:	461c      	mov	r4, r3
 8001e82:	e6a3      	b.n	8001bcc <__kernel_rem_pio2+0xec>
 8001e84:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8001e86:	2301      	movs	r3, #1
 8001e88:	e7e4      	b.n	8001e54 <__kernel_rem_pio2+0x374>
 8001e8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001e8c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8001e90:	f7fe fb0c 	bl	80004ac <__aeabi_i2d>
 8001e94:	e8e5 0102 	strd	r0, r1, [r5], #8
 8001e98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001e9a:	46ab      	mov	fp, r5
 8001e9c:	461c      	mov	r4, r3
 8001e9e:	f04f 0900 	mov.w	r9, #0
 8001ea2:	2600      	movs	r6, #0
 8001ea4:	2700      	movs	r7, #0
 8001ea6:	9b06      	ldr	r3, [sp, #24]
 8001ea8:	4599      	cmp	r9, r3
 8001eaa:	dd06      	ble.n	8001eba <__kernel_rem_pio2+0x3da>
 8001eac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001eae:	e8e3 6702 	strd	r6, r7, [r3], #8
 8001eb2:	f108 0801 	add.w	r8, r8, #1
 8001eb6:	930a      	str	r3, [sp, #40]	; 0x28
 8001eb8:	e7df      	b.n	8001e7a <__kernel_rem_pio2+0x39a>
 8001eba:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8001ebe:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8001ec2:	f7fe fb5d 	bl	8000580 <__aeabi_dmul>
 8001ec6:	4602      	mov	r2, r0
 8001ec8:	460b      	mov	r3, r1
 8001eca:	4630      	mov	r0, r6
 8001ecc:	4639      	mov	r1, r7
 8001ece:	f7fe f9a1 	bl	8000214 <__adddf3>
 8001ed2:	f109 0901 	add.w	r9, r9, #1
 8001ed6:	4606      	mov	r6, r0
 8001ed8:	460f      	mov	r7, r1
 8001eda:	e7e4      	b.n	8001ea6 <__kernel_rem_pio2+0x3c6>
 8001edc:	3d01      	subs	r5, #1
 8001ede:	e748      	b.n	8001d72 <__kernel_rem_pio2+0x292>
 8001ee0:	ec47 6b10 	vmov	d0, r6, r7
 8001ee4:	f1ca 0000 	rsb	r0, sl, #0
 8001ee8:	f000 fa92 	bl	8002410 <scalbn>
 8001eec:	ec57 6b10 	vmov	r6, r7, d0
 8001ef0:	4ba0      	ldr	r3, [pc, #640]	; (8002174 <__kernel_rem_pio2+0x694>)
 8001ef2:	ee10 0a10 	vmov	r0, s0
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	4639      	mov	r1, r7
 8001efa:	f7fe fdc7 	bl	8000a8c <__aeabi_dcmpge>
 8001efe:	b1f8      	cbz	r0, 8001f40 <__kernel_rem_pio2+0x460>
 8001f00:	4b9d      	ldr	r3, [pc, #628]	; (8002178 <__kernel_rem_pio2+0x698>)
 8001f02:	2200      	movs	r2, #0
 8001f04:	4630      	mov	r0, r6
 8001f06:	4639      	mov	r1, r7
 8001f08:	f7fe fb3a 	bl	8000580 <__aeabi_dmul>
 8001f0c:	f7fe fdd2 	bl	8000ab4 <__aeabi_d2iz>
 8001f10:	4680      	mov	r8, r0
 8001f12:	f7fe facb 	bl	80004ac <__aeabi_i2d>
 8001f16:	4b97      	ldr	r3, [pc, #604]	; (8002174 <__kernel_rem_pio2+0x694>)
 8001f18:	2200      	movs	r2, #0
 8001f1a:	f7fe fb31 	bl	8000580 <__aeabi_dmul>
 8001f1e:	460b      	mov	r3, r1
 8001f20:	4602      	mov	r2, r0
 8001f22:	4639      	mov	r1, r7
 8001f24:	4630      	mov	r0, r6
 8001f26:	f7fe f973 	bl	8000210 <__aeabi_dsub>
 8001f2a:	f7fe fdc3 	bl	8000ab4 <__aeabi_d2iz>
 8001f2e:	1c65      	adds	r5, r4, #1
 8001f30:	ab0e      	add	r3, sp, #56	; 0x38
 8001f32:	f10a 0a18 	add.w	sl, sl, #24
 8001f36:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8001f3a:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8001f3e:	e720      	b.n	8001d82 <__kernel_rem_pio2+0x2a2>
 8001f40:	4630      	mov	r0, r6
 8001f42:	4639      	mov	r1, r7
 8001f44:	f7fe fdb6 	bl	8000ab4 <__aeabi_d2iz>
 8001f48:	ab0e      	add	r3, sp, #56	; 0x38
 8001f4a:	4625      	mov	r5, r4
 8001f4c:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8001f50:	e717      	b.n	8001d82 <__kernel_rem_pio2+0x2a2>
 8001f52:	ab0e      	add	r3, sp, #56	; 0x38
 8001f54:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8001f58:	f7fe faa8 	bl	80004ac <__aeabi_i2d>
 8001f5c:	4632      	mov	r2, r6
 8001f5e:	463b      	mov	r3, r7
 8001f60:	f7fe fb0e 	bl	8000580 <__aeabi_dmul>
 8001f64:	4b84      	ldr	r3, [pc, #528]	; (8002178 <__kernel_rem_pio2+0x698>)
 8001f66:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8001f6a:	2200      	movs	r2, #0
 8001f6c:	4630      	mov	r0, r6
 8001f6e:	4639      	mov	r1, r7
 8001f70:	f7fe fb06 	bl	8000580 <__aeabi_dmul>
 8001f74:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001f78:	4606      	mov	r6, r0
 8001f7a:	460f      	mov	r7, r1
 8001f7c:	e70f      	b.n	8001d9e <__kernel_rem_pio2+0x2be>
 8001f7e:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8001f82:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8001f86:	f7fe fafb 	bl	8000580 <__aeabi_dmul>
 8001f8a:	4602      	mov	r2, r0
 8001f8c:	460b      	mov	r3, r1
 8001f8e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001f92:	f7fe f93f 	bl	8000214 <__adddf3>
 8001f96:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8001f9a:	f108 0801 	add.w	r8, r8, #1
 8001f9e:	9b02      	ldr	r3, [sp, #8]
 8001fa0:	4598      	cmp	r8, r3
 8001fa2:	dc01      	bgt.n	8001fa8 <__kernel_rem_pio2+0x4c8>
 8001fa4:	45b8      	cmp	r8, r7
 8001fa6:	ddea      	ble.n	8001f7e <__kernel_rem_pio2+0x49e>
 8001fa8:	ed9d 7b06 	vldr	d7, [sp, #24]
 8001fac:	ab4a      	add	r3, sp, #296	; 0x128
 8001fae:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8001fb2:	ed87 7b00 	vstr	d7, [r7]
 8001fb6:	3e01      	subs	r6, #1
 8001fb8:	e6f8      	b.n	8001dac <__kernel_rem_pio2+0x2cc>
 8001fba:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8001fbc:	2b02      	cmp	r3, #2
 8001fbe:	dc0b      	bgt.n	8001fd8 <__kernel_rem_pio2+0x4f8>
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	dc35      	bgt.n	8002030 <__kernel_rem_pio2+0x550>
 8001fc4:	d059      	beq.n	800207a <__kernel_rem_pio2+0x59a>
 8001fc6:	9b04      	ldr	r3, [sp, #16]
 8001fc8:	f003 0007 	and.w	r0, r3, #7
 8001fcc:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8001fd0:	ecbd 8b02 	vpop	{d8}
 8001fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001fd8:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8001fda:	2b03      	cmp	r3, #3
 8001fdc:	d1f3      	bne.n	8001fc6 <__kernel_rem_pio2+0x4e6>
 8001fde:	ab4a      	add	r3, sp, #296	; 0x128
 8001fe0:	4423      	add	r3, r4
 8001fe2:	9306      	str	r3, [sp, #24]
 8001fe4:	461c      	mov	r4, r3
 8001fe6:	469a      	mov	sl, r3
 8001fe8:	9502      	str	r5, [sp, #8]
 8001fea:	9b02      	ldr	r3, [sp, #8]
 8001fec:	2b00      	cmp	r3, #0
 8001fee:	f1aa 0a08 	sub.w	sl, sl, #8
 8001ff2:	dc6b      	bgt.n	80020cc <__kernel_rem_pio2+0x5ec>
 8001ff4:	46aa      	mov	sl, r5
 8001ff6:	f1ba 0f01 	cmp.w	sl, #1
 8001ffa:	f1a4 0408 	sub.w	r4, r4, #8
 8001ffe:	f300 8085 	bgt.w	800210c <__kernel_rem_pio2+0x62c>
 8002002:	9c06      	ldr	r4, [sp, #24]
 8002004:	2000      	movs	r0, #0
 8002006:	3408      	adds	r4, #8
 8002008:	2100      	movs	r1, #0
 800200a:	2d01      	cmp	r5, #1
 800200c:	f300 809d 	bgt.w	800214a <__kernel_rem_pio2+0x66a>
 8002010:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8002014:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8002018:	f1bb 0f00 	cmp.w	fp, #0
 800201c:	f040 809b 	bne.w	8002156 <__kernel_rem_pio2+0x676>
 8002020:	9b01      	ldr	r3, [sp, #4]
 8002022:	e9c3 5600 	strd	r5, r6, [r3]
 8002026:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800202a:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800202e:	e7ca      	b.n	8001fc6 <__kernel_rem_pio2+0x4e6>
 8002030:	3408      	adds	r4, #8
 8002032:	ab4a      	add	r3, sp, #296	; 0x128
 8002034:	441c      	add	r4, r3
 8002036:	462e      	mov	r6, r5
 8002038:	2000      	movs	r0, #0
 800203a:	2100      	movs	r1, #0
 800203c:	2e00      	cmp	r6, #0
 800203e:	da36      	bge.n	80020ae <__kernel_rem_pio2+0x5ce>
 8002040:	f1bb 0f00 	cmp.w	fp, #0
 8002044:	d039      	beq.n	80020ba <__kernel_rem_pio2+0x5da>
 8002046:	4602      	mov	r2, r0
 8002048:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800204c:	9c01      	ldr	r4, [sp, #4]
 800204e:	e9c4 2300 	strd	r2, r3, [r4]
 8002052:	4602      	mov	r2, r0
 8002054:	460b      	mov	r3, r1
 8002056:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 800205a:	f7fe f8d9 	bl	8000210 <__aeabi_dsub>
 800205e:	ae4c      	add	r6, sp, #304	; 0x130
 8002060:	2401      	movs	r4, #1
 8002062:	42a5      	cmp	r5, r4
 8002064:	da2c      	bge.n	80020c0 <__kernel_rem_pio2+0x5e0>
 8002066:	f1bb 0f00 	cmp.w	fp, #0
 800206a:	d002      	beq.n	8002072 <__kernel_rem_pio2+0x592>
 800206c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002070:	4619      	mov	r1, r3
 8002072:	9b01      	ldr	r3, [sp, #4]
 8002074:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8002078:	e7a5      	b.n	8001fc6 <__kernel_rem_pio2+0x4e6>
 800207a:	f504 731a 	add.w	r3, r4, #616	; 0x268
 800207e:	eb0d 0403 	add.w	r4, sp, r3
 8002082:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8002086:	2000      	movs	r0, #0
 8002088:	2100      	movs	r1, #0
 800208a:	2d00      	cmp	r5, #0
 800208c:	da09      	bge.n	80020a2 <__kernel_rem_pio2+0x5c2>
 800208e:	f1bb 0f00 	cmp.w	fp, #0
 8002092:	d002      	beq.n	800209a <__kernel_rem_pio2+0x5ba>
 8002094:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002098:	4619      	mov	r1, r3
 800209a:	9b01      	ldr	r3, [sp, #4]
 800209c:	e9c3 0100 	strd	r0, r1, [r3]
 80020a0:	e791      	b.n	8001fc6 <__kernel_rem_pio2+0x4e6>
 80020a2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80020a6:	f7fe f8b5 	bl	8000214 <__adddf3>
 80020aa:	3d01      	subs	r5, #1
 80020ac:	e7ed      	b.n	800208a <__kernel_rem_pio2+0x5aa>
 80020ae:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80020b2:	f7fe f8af 	bl	8000214 <__adddf3>
 80020b6:	3e01      	subs	r6, #1
 80020b8:	e7c0      	b.n	800203c <__kernel_rem_pio2+0x55c>
 80020ba:	4602      	mov	r2, r0
 80020bc:	460b      	mov	r3, r1
 80020be:	e7c5      	b.n	800204c <__kernel_rem_pio2+0x56c>
 80020c0:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 80020c4:	f7fe f8a6 	bl	8000214 <__adddf3>
 80020c8:	3401      	adds	r4, #1
 80020ca:	e7ca      	b.n	8002062 <__kernel_rem_pio2+0x582>
 80020cc:	e9da 8900 	ldrd	r8, r9, [sl]
 80020d0:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 80020d4:	9b02      	ldr	r3, [sp, #8]
 80020d6:	3b01      	subs	r3, #1
 80020d8:	9302      	str	r3, [sp, #8]
 80020da:	4632      	mov	r2, r6
 80020dc:	463b      	mov	r3, r7
 80020de:	4640      	mov	r0, r8
 80020e0:	4649      	mov	r1, r9
 80020e2:	f7fe f897 	bl	8000214 <__adddf3>
 80020e6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80020ea:	4602      	mov	r2, r0
 80020ec:	460b      	mov	r3, r1
 80020ee:	4640      	mov	r0, r8
 80020f0:	4649      	mov	r1, r9
 80020f2:	f7fe f88d 	bl	8000210 <__aeabi_dsub>
 80020f6:	4632      	mov	r2, r6
 80020f8:	463b      	mov	r3, r7
 80020fa:	f7fe f88b 	bl	8000214 <__adddf3>
 80020fe:	ed9d 7b08 	vldr	d7, [sp, #32]
 8002102:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002106:	ed8a 7b00 	vstr	d7, [sl]
 800210a:	e76e      	b.n	8001fea <__kernel_rem_pio2+0x50a>
 800210c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8002110:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8002114:	4640      	mov	r0, r8
 8002116:	4632      	mov	r2, r6
 8002118:	463b      	mov	r3, r7
 800211a:	4649      	mov	r1, r9
 800211c:	f7fe f87a 	bl	8000214 <__adddf3>
 8002120:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002124:	4602      	mov	r2, r0
 8002126:	460b      	mov	r3, r1
 8002128:	4640      	mov	r0, r8
 800212a:	4649      	mov	r1, r9
 800212c:	f7fe f870 	bl	8000210 <__aeabi_dsub>
 8002130:	4632      	mov	r2, r6
 8002132:	463b      	mov	r3, r7
 8002134:	f7fe f86e 	bl	8000214 <__adddf3>
 8002138:	ed9d 7b02 	vldr	d7, [sp, #8]
 800213c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8002140:	ed84 7b00 	vstr	d7, [r4]
 8002144:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002148:	e755      	b.n	8001ff6 <__kernel_rem_pio2+0x516>
 800214a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800214e:	f7fe f861 	bl	8000214 <__adddf3>
 8002152:	3d01      	subs	r5, #1
 8002154:	e759      	b.n	800200a <__kernel_rem_pio2+0x52a>
 8002156:	9b01      	ldr	r3, [sp, #4]
 8002158:	9a01      	ldr	r2, [sp, #4]
 800215a:	601d      	str	r5, [r3, #0]
 800215c:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8002160:	605c      	str	r4, [r3, #4]
 8002162:	609f      	str	r7, [r3, #8]
 8002164:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8002168:	60d3      	str	r3, [r2, #12]
 800216a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800216e:	6110      	str	r0, [r2, #16]
 8002170:	6153      	str	r3, [r2, #20]
 8002172:	e728      	b.n	8001fc6 <__kernel_rem_pio2+0x4e6>
 8002174:	41700000 	.word	0x41700000
 8002178:	3e700000 	.word	0x3e700000
 800217c:	00000000 	.word	0x00000000

08002180 <__kernel_sin>:
 8002180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002184:	ed2d 8b04 	vpush	{d8-d9}
 8002188:	eeb0 8a41 	vmov.f32	s16, s2
 800218c:	eef0 8a61 	vmov.f32	s17, s3
 8002190:	ec55 4b10 	vmov	r4, r5, d0
 8002194:	b083      	sub	sp, #12
 8002196:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800219a:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800219e:	9001      	str	r0, [sp, #4]
 80021a0:	da06      	bge.n	80021b0 <__kernel_sin+0x30>
 80021a2:	ee10 0a10 	vmov	r0, s0
 80021a6:	4629      	mov	r1, r5
 80021a8:	f7fe fc84 	bl	8000ab4 <__aeabi_d2iz>
 80021ac:	2800      	cmp	r0, #0
 80021ae:	d051      	beq.n	8002254 <__kernel_sin+0xd4>
 80021b0:	4622      	mov	r2, r4
 80021b2:	462b      	mov	r3, r5
 80021b4:	4620      	mov	r0, r4
 80021b6:	4629      	mov	r1, r5
 80021b8:	f7fe f9e2 	bl	8000580 <__aeabi_dmul>
 80021bc:	4682      	mov	sl, r0
 80021be:	468b      	mov	fp, r1
 80021c0:	4602      	mov	r2, r0
 80021c2:	460b      	mov	r3, r1
 80021c4:	4620      	mov	r0, r4
 80021c6:	4629      	mov	r1, r5
 80021c8:	f7fe f9da 	bl	8000580 <__aeabi_dmul>
 80021cc:	a341      	add	r3, pc, #260	; (adr r3, 80022d4 <__kernel_sin+0x154>)
 80021ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021d2:	4680      	mov	r8, r0
 80021d4:	4689      	mov	r9, r1
 80021d6:	4650      	mov	r0, sl
 80021d8:	4659      	mov	r1, fp
 80021da:	f7fe f9d1 	bl	8000580 <__aeabi_dmul>
 80021de:	a33f      	add	r3, pc, #252	; (adr r3, 80022dc <__kernel_sin+0x15c>)
 80021e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021e4:	f7fe f814 	bl	8000210 <__aeabi_dsub>
 80021e8:	4652      	mov	r2, sl
 80021ea:	465b      	mov	r3, fp
 80021ec:	f7fe f9c8 	bl	8000580 <__aeabi_dmul>
 80021f0:	a33c      	add	r3, pc, #240	; (adr r3, 80022e4 <__kernel_sin+0x164>)
 80021f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021f6:	f7fe f80d 	bl	8000214 <__adddf3>
 80021fa:	4652      	mov	r2, sl
 80021fc:	465b      	mov	r3, fp
 80021fe:	f7fe f9bf 	bl	8000580 <__aeabi_dmul>
 8002202:	a33a      	add	r3, pc, #232	; (adr r3, 80022ec <__kernel_sin+0x16c>)
 8002204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002208:	f7fe f802 	bl	8000210 <__aeabi_dsub>
 800220c:	4652      	mov	r2, sl
 800220e:	465b      	mov	r3, fp
 8002210:	f7fe f9b6 	bl	8000580 <__aeabi_dmul>
 8002214:	a337      	add	r3, pc, #220	; (adr r3, 80022f4 <__kernel_sin+0x174>)
 8002216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800221a:	f7fd fffb 	bl	8000214 <__adddf3>
 800221e:	9b01      	ldr	r3, [sp, #4]
 8002220:	4606      	mov	r6, r0
 8002222:	460f      	mov	r7, r1
 8002224:	b9eb      	cbnz	r3, 8002262 <__kernel_sin+0xe2>
 8002226:	4602      	mov	r2, r0
 8002228:	460b      	mov	r3, r1
 800222a:	4650      	mov	r0, sl
 800222c:	4659      	mov	r1, fp
 800222e:	f7fe f9a7 	bl	8000580 <__aeabi_dmul>
 8002232:	a325      	add	r3, pc, #148	; (adr r3, 80022c8 <__kernel_sin+0x148>)
 8002234:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002238:	f7fd ffea 	bl	8000210 <__aeabi_dsub>
 800223c:	4642      	mov	r2, r8
 800223e:	464b      	mov	r3, r9
 8002240:	f7fe f99e 	bl	8000580 <__aeabi_dmul>
 8002244:	4602      	mov	r2, r0
 8002246:	460b      	mov	r3, r1
 8002248:	4620      	mov	r0, r4
 800224a:	4629      	mov	r1, r5
 800224c:	f7fd ffe2 	bl	8000214 <__adddf3>
 8002250:	4604      	mov	r4, r0
 8002252:	460d      	mov	r5, r1
 8002254:	ec45 4b10 	vmov	d0, r4, r5
 8002258:	b003      	add	sp, #12
 800225a:	ecbd 8b04 	vpop	{d8-d9}
 800225e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002262:	4b1b      	ldr	r3, [pc, #108]	; (80022d0 <__kernel_sin+0x150>)
 8002264:	ec51 0b18 	vmov	r0, r1, d8
 8002268:	2200      	movs	r2, #0
 800226a:	f7fe f989 	bl	8000580 <__aeabi_dmul>
 800226e:	4632      	mov	r2, r6
 8002270:	ec41 0b19 	vmov	d9, r0, r1
 8002274:	463b      	mov	r3, r7
 8002276:	4640      	mov	r0, r8
 8002278:	4649      	mov	r1, r9
 800227a:	f7fe f981 	bl	8000580 <__aeabi_dmul>
 800227e:	4602      	mov	r2, r0
 8002280:	460b      	mov	r3, r1
 8002282:	ec51 0b19 	vmov	r0, r1, d9
 8002286:	f7fd ffc3 	bl	8000210 <__aeabi_dsub>
 800228a:	4652      	mov	r2, sl
 800228c:	465b      	mov	r3, fp
 800228e:	f7fe f977 	bl	8000580 <__aeabi_dmul>
 8002292:	ec53 2b18 	vmov	r2, r3, d8
 8002296:	f7fd ffbb 	bl	8000210 <__aeabi_dsub>
 800229a:	a30b      	add	r3, pc, #44	; (adr r3, 80022c8 <__kernel_sin+0x148>)
 800229c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022a0:	4606      	mov	r6, r0
 80022a2:	460f      	mov	r7, r1
 80022a4:	4640      	mov	r0, r8
 80022a6:	4649      	mov	r1, r9
 80022a8:	f7fe f96a 	bl	8000580 <__aeabi_dmul>
 80022ac:	4602      	mov	r2, r0
 80022ae:	460b      	mov	r3, r1
 80022b0:	4630      	mov	r0, r6
 80022b2:	4639      	mov	r1, r7
 80022b4:	f7fd ffae 	bl	8000214 <__adddf3>
 80022b8:	4602      	mov	r2, r0
 80022ba:	460b      	mov	r3, r1
 80022bc:	4620      	mov	r0, r4
 80022be:	4629      	mov	r1, r5
 80022c0:	f7fd ffa6 	bl	8000210 <__aeabi_dsub>
 80022c4:	e7c4      	b.n	8002250 <__kernel_sin+0xd0>
 80022c6:	bf00      	nop
 80022c8:	55555549 	.word	0x55555549
 80022cc:	3fc55555 	.word	0x3fc55555
 80022d0:	3fe00000 	.word	0x3fe00000
 80022d4:	5acfd57c 	.word	0x5acfd57c
 80022d8:	3de5d93a 	.word	0x3de5d93a
 80022dc:	8a2b9ceb 	.word	0x8a2b9ceb
 80022e0:	3e5ae5e6 	.word	0x3e5ae5e6
 80022e4:	57b1fe7d 	.word	0x57b1fe7d
 80022e8:	3ec71de3 	.word	0x3ec71de3
 80022ec:	19c161d5 	.word	0x19c161d5
 80022f0:	3f2a01a0 	.word	0x3f2a01a0
 80022f4:	1110f8a6 	.word	0x1110f8a6
 80022f8:	3f811111 	.word	0x3f811111

080022fc <fabs>:
 80022fc:	ec51 0b10 	vmov	r0, r1, d0
 8002300:	ee10 2a10 	vmov	r2, s0
 8002304:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8002308:	ec43 2b10 	vmov	d0, r2, r3
 800230c:	4770      	bx	lr
	...

08002310 <floor>:
 8002310:	ec51 0b10 	vmov	r0, r1, d0
 8002314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002318:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800231c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8002320:	2e13      	cmp	r6, #19
 8002322:	ee10 5a10 	vmov	r5, s0
 8002326:	ee10 8a10 	vmov	r8, s0
 800232a:	460c      	mov	r4, r1
 800232c:	dc32      	bgt.n	8002394 <floor+0x84>
 800232e:	2e00      	cmp	r6, #0
 8002330:	da14      	bge.n	800235c <floor+0x4c>
 8002332:	a333      	add	r3, pc, #204	; (adr r3, 8002400 <floor+0xf0>)
 8002334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002338:	f7fd ff6c 	bl	8000214 <__adddf3>
 800233c:	2200      	movs	r2, #0
 800233e:	2300      	movs	r3, #0
 8002340:	f7fe fbae 	bl	8000aa0 <__aeabi_dcmpgt>
 8002344:	b138      	cbz	r0, 8002356 <floor+0x46>
 8002346:	2c00      	cmp	r4, #0
 8002348:	da57      	bge.n	80023fa <floor+0xea>
 800234a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800234e:	431d      	orrs	r5, r3
 8002350:	d001      	beq.n	8002356 <floor+0x46>
 8002352:	4c2d      	ldr	r4, [pc, #180]	; (8002408 <floor+0xf8>)
 8002354:	2500      	movs	r5, #0
 8002356:	4621      	mov	r1, r4
 8002358:	4628      	mov	r0, r5
 800235a:	e025      	b.n	80023a8 <floor+0x98>
 800235c:	4f2b      	ldr	r7, [pc, #172]	; (800240c <floor+0xfc>)
 800235e:	4137      	asrs	r7, r6
 8002360:	ea01 0307 	and.w	r3, r1, r7
 8002364:	4303      	orrs	r3, r0
 8002366:	d01f      	beq.n	80023a8 <floor+0x98>
 8002368:	a325      	add	r3, pc, #148	; (adr r3, 8002400 <floor+0xf0>)
 800236a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800236e:	f7fd ff51 	bl	8000214 <__adddf3>
 8002372:	2200      	movs	r2, #0
 8002374:	2300      	movs	r3, #0
 8002376:	f7fe fb93 	bl	8000aa0 <__aeabi_dcmpgt>
 800237a:	2800      	cmp	r0, #0
 800237c:	d0eb      	beq.n	8002356 <floor+0x46>
 800237e:	2c00      	cmp	r4, #0
 8002380:	bfbe      	ittt	lt
 8002382:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8002386:	fa43 f606 	asrlt.w	r6, r3, r6
 800238a:	19a4      	addlt	r4, r4, r6
 800238c:	ea24 0407 	bic.w	r4, r4, r7
 8002390:	2500      	movs	r5, #0
 8002392:	e7e0      	b.n	8002356 <floor+0x46>
 8002394:	2e33      	cmp	r6, #51	; 0x33
 8002396:	dd0b      	ble.n	80023b0 <floor+0xa0>
 8002398:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800239c:	d104      	bne.n	80023a8 <floor+0x98>
 800239e:	ee10 2a10 	vmov	r2, s0
 80023a2:	460b      	mov	r3, r1
 80023a4:	f7fd ff36 	bl	8000214 <__adddf3>
 80023a8:	ec41 0b10 	vmov	d0, r0, r1
 80023ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80023b0:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 80023b4:	f04f 33ff 	mov.w	r3, #4294967295
 80023b8:	fa23 f707 	lsr.w	r7, r3, r7
 80023bc:	4207      	tst	r7, r0
 80023be:	d0f3      	beq.n	80023a8 <floor+0x98>
 80023c0:	a30f      	add	r3, pc, #60	; (adr r3, 8002400 <floor+0xf0>)
 80023c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023c6:	f7fd ff25 	bl	8000214 <__adddf3>
 80023ca:	2200      	movs	r2, #0
 80023cc:	2300      	movs	r3, #0
 80023ce:	f7fe fb67 	bl	8000aa0 <__aeabi_dcmpgt>
 80023d2:	2800      	cmp	r0, #0
 80023d4:	d0bf      	beq.n	8002356 <floor+0x46>
 80023d6:	2c00      	cmp	r4, #0
 80023d8:	da02      	bge.n	80023e0 <floor+0xd0>
 80023da:	2e14      	cmp	r6, #20
 80023dc:	d103      	bne.n	80023e6 <floor+0xd6>
 80023de:	3401      	adds	r4, #1
 80023e0:	ea25 0507 	bic.w	r5, r5, r7
 80023e4:	e7b7      	b.n	8002356 <floor+0x46>
 80023e6:	2301      	movs	r3, #1
 80023e8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80023ec:	fa03 f606 	lsl.w	r6, r3, r6
 80023f0:	4435      	add	r5, r6
 80023f2:	4545      	cmp	r5, r8
 80023f4:	bf38      	it	cc
 80023f6:	18e4      	addcc	r4, r4, r3
 80023f8:	e7f2      	b.n	80023e0 <floor+0xd0>
 80023fa:	2500      	movs	r5, #0
 80023fc:	462c      	mov	r4, r5
 80023fe:	e7aa      	b.n	8002356 <floor+0x46>
 8002400:	8800759c 	.word	0x8800759c
 8002404:	7e37e43c 	.word	0x7e37e43c
 8002408:	bff00000 	.word	0xbff00000
 800240c:	000fffff 	.word	0x000fffff

08002410 <scalbn>:
 8002410:	b570      	push	{r4, r5, r6, lr}
 8002412:	ec55 4b10 	vmov	r4, r5, d0
 8002416:	f3c5 520a 	ubfx	r2, r5, #20, #11
 800241a:	4606      	mov	r6, r0
 800241c:	462b      	mov	r3, r5
 800241e:	b99a      	cbnz	r2, 8002448 <scalbn+0x38>
 8002420:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8002424:	4323      	orrs	r3, r4
 8002426:	d036      	beq.n	8002496 <scalbn+0x86>
 8002428:	4b39      	ldr	r3, [pc, #228]	; (8002510 <scalbn+0x100>)
 800242a:	4629      	mov	r1, r5
 800242c:	ee10 0a10 	vmov	r0, s0
 8002430:	2200      	movs	r2, #0
 8002432:	f7fe f8a5 	bl	8000580 <__aeabi_dmul>
 8002436:	4b37      	ldr	r3, [pc, #220]	; (8002514 <scalbn+0x104>)
 8002438:	429e      	cmp	r6, r3
 800243a:	4604      	mov	r4, r0
 800243c:	460d      	mov	r5, r1
 800243e:	da10      	bge.n	8002462 <scalbn+0x52>
 8002440:	a32b      	add	r3, pc, #172	; (adr r3, 80024f0 <scalbn+0xe0>)
 8002442:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002446:	e03a      	b.n	80024be <scalbn+0xae>
 8002448:	f240 71ff 	movw	r1, #2047	; 0x7ff
 800244c:	428a      	cmp	r2, r1
 800244e:	d10c      	bne.n	800246a <scalbn+0x5a>
 8002450:	ee10 2a10 	vmov	r2, s0
 8002454:	4620      	mov	r0, r4
 8002456:	4629      	mov	r1, r5
 8002458:	f7fd fedc 	bl	8000214 <__adddf3>
 800245c:	4604      	mov	r4, r0
 800245e:	460d      	mov	r5, r1
 8002460:	e019      	b.n	8002496 <scalbn+0x86>
 8002462:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8002466:	460b      	mov	r3, r1
 8002468:	3a36      	subs	r2, #54	; 0x36
 800246a:	4432      	add	r2, r6
 800246c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8002470:	428a      	cmp	r2, r1
 8002472:	dd08      	ble.n	8002486 <scalbn+0x76>
 8002474:	2d00      	cmp	r5, #0
 8002476:	a120      	add	r1, pc, #128	; (adr r1, 80024f8 <scalbn+0xe8>)
 8002478:	e9d1 0100 	ldrd	r0, r1, [r1]
 800247c:	da1c      	bge.n	80024b8 <scalbn+0xa8>
 800247e:	a120      	add	r1, pc, #128	; (adr r1, 8002500 <scalbn+0xf0>)
 8002480:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002484:	e018      	b.n	80024b8 <scalbn+0xa8>
 8002486:	2a00      	cmp	r2, #0
 8002488:	dd08      	ble.n	800249c <scalbn+0x8c>
 800248a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800248e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8002492:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8002496:	ec45 4b10 	vmov	d0, r4, r5
 800249a:	bd70      	pop	{r4, r5, r6, pc}
 800249c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80024a0:	da19      	bge.n	80024d6 <scalbn+0xc6>
 80024a2:	f24c 3350 	movw	r3, #50000	; 0xc350
 80024a6:	429e      	cmp	r6, r3
 80024a8:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 80024ac:	dd0a      	ble.n	80024c4 <scalbn+0xb4>
 80024ae:	a112      	add	r1, pc, #72	; (adr r1, 80024f8 <scalbn+0xe8>)
 80024b0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d1e2      	bne.n	800247e <scalbn+0x6e>
 80024b8:	a30f      	add	r3, pc, #60	; (adr r3, 80024f8 <scalbn+0xe8>)
 80024ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024be:	f7fe f85f 	bl	8000580 <__aeabi_dmul>
 80024c2:	e7cb      	b.n	800245c <scalbn+0x4c>
 80024c4:	a10a      	add	r1, pc, #40	; (adr r1, 80024f0 <scalbn+0xe0>)
 80024c6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80024ca:	2b00      	cmp	r3, #0
 80024cc:	d0b8      	beq.n	8002440 <scalbn+0x30>
 80024ce:	a10e      	add	r1, pc, #56	; (adr r1, 8002508 <scalbn+0xf8>)
 80024d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80024d4:	e7b4      	b.n	8002440 <scalbn+0x30>
 80024d6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80024da:	3236      	adds	r2, #54	; 0x36
 80024dc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80024e0:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 80024e4:	4620      	mov	r0, r4
 80024e6:	4b0c      	ldr	r3, [pc, #48]	; (8002518 <scalbn+0x108>)
 80024e8:	2200      	movs	r2, #0
 80024ea:	e7e8      	b.n	80024be <scalbn+0xae>
 80024ec:	f3af 8000 	nop.w
 80024f0:	c2f8f359 	.word	0xc2f8f359
 80024f4:	01a56e1f 	.word	0x01a56e1f
 80024f8:	8800759c 	.word	0x8800759c
 80024fc:	7e37e43c 	.word	0x7e37e43c
 8002500:	8800759c 	.word	0x8800759c
 8002504:	fe37e43c 	.word	0xfe37e43c
 8002508:	c2f8f359 	.word	0xc2f8f359
 800250c:	81a56e1f 	.word	0x81a56e1f
 8002510:	43500000 	.word	0x43500000
 8002514:	ffff3cb0 	.word	0xffff3cb0
 8002518:	3c900000 	.word	0x3c900000

0800251c <_init>:
 800251c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800251e:	bf00      	nop
 8002520:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002522:	bc08      	pop	{r3}
 8002524:	469e      	mov	lr, r3
 8002526:	4770      	bx	lr

08002528 <_fini>:
 8002528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800252a:	bf00      	nop
 800252c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800252e:	bc08      	pop	{r3}
 8002530:	469e      	mov	lr, r3
 8002532:	4770      	bx	lr
